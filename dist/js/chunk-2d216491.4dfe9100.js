(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d216491"],{c28d:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("title-detail",{attrs:{title:"表格",detail:"基于antd的table组件封装的表格组件，拥有antd所有table组件的API，并在此基础上增添丰富了新的功能，例如表格列宽拖拽、行点击选中、v-model的选中数据绑定等，具体可查看如下API。"}}),n("a",{attrs:{href:"https://www.antdv.com/components/table-cn/"}},[e._v("antd表格组件API")]),n("h3",{staticClass:"fun-title"},[e._v("代码演示")]),n("funTitleDetail",{attrs:{title:"基本用法",detail:""}}),n("com-show",[n("y-table",{attrs:{bordered:"","row-selection":e.rowSelection,components:e.$YGetTableDragHeader(e.columns),columns:e.columns,"data-source":e.data,pagination:!1,modelKeys:e.selectedDataKeys},on:{"update:modelKeys":function(t){e.selectedDataKeys=t},"update:model-keys":function(t){e.selectedDataKeys=t}},scopedSlots:e._u([{key:"name",fn:function(t){return n("a",{staticClass:"y-button-link"},[e._v(e._s(t))])}},{key:"tags",fn:function(t){return n("span",{},e._l(t,(function(t){return n("a-tag",{key:t,attrs:{color:"loser"===t?"volcano":t.length>5?"geekblue":"green"}},[e._v(" "+e._s(t.toUpperCase())+" ")])})),1)}}]),model:{value:e.selectedData,callback:function(t){e.selectedData=t},expression:"selectedData"}}),n("p",{staticStyle:{"margin-top":"20px"}},[e._v(" selectedData："+e._s(e.selectedData)),n("br"),e._v(" selectedDataKeys："+e._s(e.selectedDataKeys)+" ")])],1),n("pre",{staticClass:"line-numbers"},[e._v("    "),n("code",{staticClass:"language-html",domProps:{textContent:e._s("<template>\n        <y-table\n          v-model='selectedData'\n          bordered\n          :row-selection='rowSelection'\n          :components='$YGetTableDragHeader(columns)'\n          :columns='columns'\n          :data-source='data'\n          :pagination='false'\n          :modelKeys.sync='selectedDataKeys'\n        >\n          <a slot='name' slot-scope='text' class='y-button-link'>{{ text }}</a>\n          <span slot='tags' slot-scope='tags'>\n            <a-tag v-for='tag in tags' :key='tag' :color='tag === 'loser' ? 'volcano' : tag.length > 5 ? 'geekblue' : 'green''>\n              {{ tag.toUpperCase() }}\n            </a-tag>\n          </span>\n        </y-table>\n      </template>")}},[e._v("\n    ")]),e._v("\n")]),e._m(0),n("api-table",{attrs:{data:e.tableData}})],1)},s=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"line-numbers"},[e._v("  "),n("code",{staticClass:"language-javascript"},[e._v("\n      const columns = [\n          {\n            title: '标题',\n            dataIndex: 'name',\n            key: 'name',\n            scopedSlots: { customRender: 'name' },\n            width: 200,\n            filters: [\n              {\n                text: 'Joe',\n                value: 'Joe',\n              },\n              {\n                text: 'Jim',\n                value: 'Jim',\n              },\n            ],\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\n            sorter: (a, b) => a.name.length - b.name.length,\n          },\n          {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n            ellipsis: true,\n            width: 200,\n          },\n          {\n            title: 'Tags',\n            key: 'tags',\n            dataIndex: 'tags',\n            scopedSlots: { customRender: 'tags' },\n            width: 200,\n          },\n        ];\n        const data = [\n          {\n            key: 'd1',\n            name: '内容文本，点击可进入详情1',\n            age: 32,\n            address: 'New York No. 1 Lake Park  New York NoNew York NoNew York NoNew York NoNew York NoNew York NoNew York No',\n            tags: ['nice', 'developer'],\n          },\n          {\n            key: 'd2',\n            name: '内容文本，点击可进入详情12',\n            age: 42,\n            address: 'London No. 1 Lake Park',\n            tags: ['loser'],\n          },\n          {\n            key: 'd3',\n            name: '内容文本，点击可进入详情123',\n            age: 32,\n            address: 'Sidney No. 1 Lake Park',\n            tags: ['cool', 'teacher'],\n          },\n        ];\n        export default {\n          name: 'tableviews',\n          data() {\n            return {\n              selectedData: [],\n              selectedDataKeys: [],\n              columns,\n              data,\n            };\n          },\n          computed: {\n            rowSelection() {\n              return {\n                columnWidth: 40,\n                selectedRowKeys: this.selectedDataKeys, // 控制选择\n              };\n            }\n          }\n        };\n      ")]),e._v("\n      ")])}],o=(n("b0c0"),[{title:"标题",dataIndex:"name",key:"name",scopedSlots:{customRender:"name"},width:200,filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"}],onFilter:function(e,t){return 0===t.name.indexOf(e)},sorter:function(e,t){return e.name.length-t.name.length}},{title:"Address",dataIndex:"address",key:"address",ellipsis:!0,width:200},{title:"Tags",key:"tags",dataIndex:"tags",scopedSlots:{customRender:"tags"},width:200}]),l=[{key:"d1",name:"内容文本，点击可进入详情1",age:32,address:"New York No. 1 Lake Park  New York NoNew York NoNew York NoNew York NoNew York NoNew York NoNew York No",tags:["nice","developer"]},{key:"d2",name:"内容文本，点击可进入详情12",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"d3",name:"内容文本，点击可进入详情123",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}],d={name:"tableviews",data:function(){return{selectedData:[],selectedDataKeys:[],columns:o,data:l,tableData:[{params:"components",explain:"components 是 antd 就有的 API，为了支持表格的拖拽需要对 components 进行设置，所以封装了一个全局的 $YGetTableDragHeader 方法，只需传入 columns 参数，就会返回支持拖拽的对象，将其赋值给 components 就可支持表格拖拽功能；至于将来想要修改 component 参数，可以在继承该对象的基础上进行修改即可。注意：只有带有 width 且 width 为数字的 columns 列才支持拖拽",type:"Object"},{params:"v-model",explain:"绑定表格选中的数据，不需要每个表格组件写选择事件",type:"Array",default:"可不传，但建议绑定"},{params:"modelKeys",explain:"绑定表格选中的数据key，必须以 modelKeys.sync 的方式绑定",type:"Array",default:"可不传，但表格作为受控组件的时候必须要传"},{params:"rowSelection的selectedRowKeys",explain:"rowSelection的具体配置可以查看 antd 的 API，其下的 selectedRowKeys 属性可使表格成为受控组件，使用该值的时候一定要用 modelKeys.sync 绑定",type:"Array",default:"建议和 modelKeys.sync 绑定同一个变量，js 修改该变量，即可修改表格的选中状态"},{params:"rowClick",explain:"控制表格的行是否支持点击选中，使用该属性时必须得要绑定 modelKeys 和使用rowSelection的selectedRowKeys，使表格成为受控组件。",type:"Boolean",default:"true"}]}},computed:{rowSelection:function(){return{columnWidth:40,selectedRowKeys:this.selectedDataKeys}}}},r=d,c=n("2877"),i=Object(c["a"])(r,a,s,!1,null,null,null);t["default"]=i.exports}}]);
//# sourceMappingURL=chunk-2d216491.4dfe9100.js.map