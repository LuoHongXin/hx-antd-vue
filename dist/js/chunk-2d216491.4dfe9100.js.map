{"version":3,"sources":["webpack:///./examples/views/components-views/table.vue?1ec7","webpack:///examples/views/components-views/table.vue","webpack:///./examples/views/components-views/table.vue?f476","webpack:///./examples/views/components-views/table.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticClass","rowSelection","$YGetTableDragHeader","columns","data","selectedDataKeys","on","$event","scopedSlots","_u","key","fn","text","_s","tags","_l","tag","length","toUpperCase","model","value","callback","$$v","selectedData","expression","staticStyle","domProps","_m","tableData","staticRenderFns","name","computed","columnWidth","selectedRowKeys","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,KAAK,OAAS,0GAA0GF,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,+CAA+C,CAACN,EAAIO,GAAG,iBAAiBH,EAAG,KAAK,CAACI,YAAY,aAAa,CAACR,EAAIO,GAAG,UAAUH,EAAG,iBAAiB,CAACE,MAAM,CAAC,MAAQ,OAAO,OAAS,MAAMF,EAAG,WAAW,CAACA,EAAG,UAAU,CAACE,MAAM,CAAC,SAAW,GAAG,gBAAgBN,EAAIS,aAAa,WAAaT,EAAIU,qBAAqBV,EAAIW,SAAS,QAAUX,EAAIW,QAAQ,cAAcX,EAAIY,KAAK,YAAa,EAAM,UAAYZ,EAAIa,kBAAkBC,GAAG,CAAC,mBAAmB,SAASC,GAAQf,EAAIa,iBAAiBE,GAAQ,oBAAoB,SAASA,GAAQf,EAAIa,iBAAiBE,IAASC,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,OAAOC,GAAG,SAASC,GAAM,OAAOhB,EAAG,IAAI,CAACI,YAAY,iBAAiB,CAACR,EAAIO,GAAGP,EAAIqB,GAAGD,QAAW,CAACF,IAAI,OAAOC,GAAG,SAASG,GAAM,OAAOlB,EAAG,OAAO,GAAGJ,EAAIuB,GAAG,GAAO,SAASC,GAAK,OAAOpB,EAAG,QAAQ,CAACc,IAAIM,EAAIlB,MAAM,CAAC,MAAgB,UAARkB,EAAkB,UAAYA,EAAIC,OAAS,EAAI,WAAa,UAAU,CAACzB,EAAIO,GAAG,IAAIP,EAAIqB,GAAGG,EAAIE,eAAe,UAAS,OAAOC,MAAM,CAACC,MAAO5B,EAAgB,aAAE6B,SAAS,SAAUC,GAAM9B,EAAI+B,aAAaD,GAAKE,WAAW,kBAAkB5B,EAAG,IAAI,CAAC6B,YAAY,CAAC,aAAa,SAAS,CAACjC,EAAIO,GAAG,iBAAiBP,EAAIqB,GAAGrB,EAAI+B,eAAe3B,EAAG,MAAMJ,EAAIO,GAAG,qBAAqBP,EAAIqB,GAAGrB,EAAIa,kBAAkB,QAAQ,GAAGT,EAAG,MAAM,CAACI,YAAY,gBAAgB,CAACR,EAAIO,GAAG,QAAQH,EAAG,OAAO,CAACI,YAAY,gBAAgB0B,SAAS,CAAC,YAAclC,EAAIqB,GAAG,ssBAAssB,CAACrB,EAAIO,GAAG,YAAYP,EAAIO,GAAG,QAAQP,EAAImC,GAAG,GAAG/B,EAAG,YAAY,CAACE,MAAM,CAAC,KAAON,EAAIoC,cAAc,IAC91EC,EAAkB,CAAC,WAAa,IAAIrC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,YAAY,gBAAgB,CAACR,EAAIO,GAAG,MAAMH,EAAG,OAAO,CAACI,YAAY,uBAAuB,CAACR,EAAIO,GAAG,4mEAA4mEP,EAAIO,GAAG,gBC6Iv0E,G,UAAA,CACA,CACE,MAAF,KACE,UAAF,OACE,IAAF,OACE,YAAF,CAAI,aAAJ,QACE,MAAF,IACE,QAAF,CACA,CACI,KAAJ,MACI,MAAJ,OAEA,CACI,KAAJ,MACI,MAAJ,QAGE,SAAF,cAAI,OAAJ,uBACE,OAAF,cAAI,OAAJ,8BAEA,CACE,MAAF,UACE,UAAF,UACE,IAAF,UACE,UAAF,EACE,MAAF,KAEA,CACE,MAAF,OACE,IAAF,OACE,UAAF,OACE,YAAF,CAAI,aAAJ,QACE,MAAF,OAGA,GACA,CACE,IAAF,KACE,KAAF,gBACE,IAAF,GACE,QAAF,0GACE,KAAF,sBAEA,CACE,IAAF,KACE,KAAF,iBACE,IAAF,GACE,QAAF,yBACE,KAAF,WAEA,CACE,IAAF,KACE,KAAF,kBACE,IAAF,GACE,QAAF,yBACE,KAAF,qBAGA,GACE+B,KAAM,aACN1B,KAFF,WAGI,MAAO,CACLmB,aAAc,GACdlB,iBAAkB,GAClBF,QAAN,EACMC,KAAN,EACMwB,UAAW,CACjB,CACQ,OAAR,aACQ,QACR,uOACQ,KAAR,UAEA,CAAQ,OAAR,UAAQ,QAAR,2BAAQ,KAAR,QAAQ,QAAR,aACA,CACQ,OAAR,YACQ,QAAR,wCACQ,KAAR,QACQ,QAAR,wBAEA,CACQ,OAAR,+BACQ,QACR,kGACQ,KAAR,QACQ,QAAR,mDAEA,CACQ,OAAR,WACQ,QACR,mFACQ,KAAR,UACQ,QAAR,WAKEG,SAAU,CACR9B,aADJ,WAEM,MAAO,CACL+B,YAAa,GACbC,gBAAiBxC,KAAKY,qBCnPgR,I,YCO1S6B,EAAY,eACd,EACA3C,EACAsC,GACA,EACA,KACA,KACA,MAIa,aAAAK,E","file":"js/chunk-2d216491.4dfe9100.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('title-detail',{attrs:{\"title\":\"表格\",\"detail\":\"基于antd的table组件封装的表格组件，拥有antd所有table组件的API，并在此基础上增添丰富了新的功能，例如表格列宽拖拽、行点击选中、v-model的选中数据绑定等，具体可查看如下API。\"}}),_c('a',{attrs:{\"href\":\"https://www.antdv.com/components/table-cn/\"}},[_vm._v(\"antd表格组件API\")]),_c('h3',{staticClass:\"fun-title\"},[_vm._v(\"代码演示\")]),_c('funTitleDetail',{attrs:{\"title\":\"基本用法\",\"detail\":\"\"}}),_c('com-show',[_c('y-table',{attrs:{\"bordered\":\"\",\"row-selection\":_vm.rowSelection,\"components\":_vm.$YGetTableDragHeader(_vm.columns),\"columns\":_vm.columns,\"data-source\":_vm.data,\"pagination\":false,\"modelKeys\":_vm.selectedDataKeys},on:{\"update:modelKeys\":function($event){_vm.selectedDataKeys=$event},\"update:model-keys\":function($event){_vm.selectedDataKeys=$event}},scopedSlots:_vm._u([{key:\"name\",fn:function(text){return _c('a',{staticClass:\"y-button-link\"},[_vm._v(_vm._s(text))])}},{key:\"tags\",fn:function(tags){return _c('span',{},_vm._l((tags),function(tag){return _c('a-tag',{key:tag,attrs:{\"color\":tag === 'loser' ? 'volcano' : tag.length > 5 ? 'geekblue' : 'green'}},[_vm._v(\" \"+_vm._s(tag.toUpperCase())+\" \")])}),1)}}]),model:{value:(_vm.selectedData),callback:function ($$v) {_vm.selectedData=$$v},expression:\"selectedData\"}}),_c('p',{staticStyle:{\"margin-top\":\"20px\"}},[_vm._v(\" selectedData：\"+_vm._s(_vm.selectedData)),_c('br'),_vm._v(\" selectedDataKeys：\"+_vm._s(_vm.selectedDataKeys)+\" \")])],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(\"<template>\\n        <y-table\\n          v-model='selectedData'\\n          bordered\\n          :row-selection='rowSelection'\\n          :components='$YGetTableDragHeader(columns)'\\n          :columns='columns'\\n          :data-source='data'\\n          :pagination='false'\\n          :modelKeys.sync='selectedDataKeys'\\n        >\\n          <a slot='name' slot-scope='text' class='y-button-link'>{{ text }}</a>\\n          <span slot='tags' slot-scope='tags'>\\n            <a-tag v-for='tag in tags' :key='tag' :color='tag === 'loser' ? 'volcano' : tag.length > 5 ? 'geekblue' : 'green''>\\n              {{ tag.toUpperCase() }}\\n            </a-tag>\\n          </span>\\n        </y-table>\\n      </template>\")}},[_vm._v(\"\\n    \")]),_vm._v(\"\\n\")]),_vm._m(0),_c('api-table',{attrs:{\"data\":_vm.tableData}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"  \"),_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"\\n      const columns = [\\n          {\\n            title: '标题',\\n            dataIndex: 'name',\\n            key: 'name',\\n            scopedSlots: { customRender: 'name' },\\n            width: 200,\\n            filters: [\\n              {\\n                text: 'Joe',\\n                value: 'Joe',\\n              },\\n              {\\n                text: 'Jim',\\n                value: 'Jim',\\n              },\\n            ],\\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\\n            sorter: (a, b) => a.name.length - b.name.length,\\n          },\\n          {\\n            title: 'Address',\\n            dataIndex: 'address',\\n            key: 'address',\\n            ellipsis: true,\\n            width: 200,\\n          },\\n          {\\n            title: 'Tags',\\n            key: 'tags',\\n            dataIndex: 'tags',\\n            scopedSlots: { customRender: 'tags' },\\n            width: 200,\\n          },\\n        ];\\n        const data = [\\n          {\\n            key: 'd1',\\n            name: '内容文本，点击可进入详情1',\\n            age: 32,\\n            address: 'New York No. 1 Lake Park  New York NoNew York NoNew York NoNew York NoNew York NoNew York NoNew York No',\\n            tags: ['nice', 'developer'],\\n          },\\n          {\\n            key: 'd2',\\n            name: '内容文本，点击可进入详情12',\\n            age: 42,\\n            address: 'London No. 1 Lake Park',\\n            tags: ['loser'],\\n          },\\n          {\\n            key: 'd3',\\n            name: '内容文本，点击可进入详情123',\\n            age: 32,\\n            address: 'Sidney No. 1 Lake Park',\\n            tags: ['cool', 'teacher'],\\n          },\\n        ];\\n        export default {\\n          name: 'tableviews',\\n          data() {\\n            return {\\n              selectedData: [],\\n              selectedDataKeys: [],\\n              columns,\\n              data,\\n            };\\n          },\\n          computed: {\\n            rowSelection() {\\n              return {\\n                columnWidth: 40,\\n                selectedRowKeys: this.selectedDataKeys, // 控制选择\\n              };\\n            }\\n          }\\n        };\\n      \")]),_vm._v(\"\\n      \")])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 组件标题和说明 -->\r\n    <title-detail\r\n      title=\"表格\"\r\n      detail=\"基于antd的table组件封装的表格组件，拥有antd所有table组件的API，并在此基础上增添丰富了新的功能，例如表格列宽拖拽、行点击选中、v-model的选中数据绑定等，具体可查看如下API。\"\r\n    />\r\n    <a href=\"https://www.antdv.com/components/table-cn/\">antd表格组件API</a>\r\n    <h3 class=\"fun-title\">代码演示</h3>\r\n    <!-- 组件展示 -->\r\n    <funTitleDetail title=\"基本用法\" detail=\"\"></funTitleDetail>\r\n    <com-show>\r\n      <y-table\r\n        v-model=\"selectedData\"\r\n        bordered\r\n        :row-selection=\"rowSelection\"\r\n        :components=\"$YGetTableDragHeader(columns)\"\r\n        :columns=\"columns\"\r\n        :data-source=\"data\"\r\n        :pagination=\"false\"\r\n        :modelKeys.sync=\"selectedDataKeys\"\r\n      >\r\n        <a slot=\"name\" slot-scope=\"text\" class=\"y-button-link\">{{ text }}</a>\r\n        <span slot=\"tags\" slot-scope=\"tags\">\r\n          <a-tag v-for=\"tag in tags\" :key=\"tag\" :color=\"tag === 'loser' ? 'volcano' : tag.length > 5 ? 'geekblue' : 'green'\">\r\n            {{ tag.toUpperCase() }}\r\n          </a-tag>\r\n        </span>\r\n      </y-table>\r\n      <p style=\"margin-top: 20px\">\r\n        selectedData：{{ selectedData }}<br />\r\n        selectedDataKeys：{{ selectedDataKeys }}\r\n      </p>\r\n    </com-show>\r\n    <!-- 代码展示 -->\r\n    <pre class=\"line-numbers\">\r\n      <code class=\"language-html\" v-text=\"`<template>\r\n          <y-table\r\n            v-model='selectedData'\r\n            bordered\r\n            :row-selection='rowSelection'\r\n            :components='$YGetTableDragHeader(columns)'\r\n            :columns='columns'\r\n            :data-source='data'\r\n            :pagination='false'\r\n            :modelKeys.sync='selectedDataKeys'\r\n          >\r\n            <a slot='name' slot-scope='text' class='y-button-link'>{{ text }}</a>\r\n            <span slot='tags' slot-scope='tags'>\r\n              <a-tag v-for='tag in tags' :key='tag' :color='tag === 'loser' ? 'volcano' : tag.length > 5 ? 'geekblue' : 'green''>\r\n                {{ tag.toUpperCase() }}\r\n              </a-tag>\r\n            </span>\r\n          </y-table>\r\n        </template>`\">\r\n      </code>\r\n  </pre>\r\n    <pre class=\"line-numbers\">\r\n    <code class=\"language-javascript\">\r\n        const columns = [\r\n            {\r\n              title: '标题',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              scopedSlots: { customRender: 'name' },\r\n              width: 200,\r\n              filters: [\r\n                {\r\n                  text: 'Joe',\r\n                  value: 'Joe',\r\n                },\r\n                {\r\n                  text: 'Jim',\r\n                  value: 'Jim',\r\n                },\r\n              ],\r\n              onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n              sorter: (a, b) => a.name.length - b.name.length,\r\n            },\r\n            {\r\n              title: 'Address',\r\n              dataIndex: 'address',\r\n              key: 'address',\r\n              ellipsis: true,\r\n              width: 200,\r\n            },\r\n            {\r\n              title: 'Tags',\r\n              key: 'tags',\r\n              dataIndex: 'tags',\r\n              scopedSlots: { customRender: 'tags' },\r\n              width: 200,\r\n            },\r\n          ];\r\n          const data = [\r\n            {\r\n              key: 'd1',\r\n              name: '内容文本，点击可进入详情1',\r\n              age: 32,\r\n              address: 'New York No. 1 Lake Park  New York NoNew York NoNew York NoNew York NoNew York NoNew York NoNew York No',\r\n              tags: ['nice', 'developer'],\r\n            },\r\n            {\r\n              key: 'd2',\r\n              name: '内容文本，点击可进入详情12',\r\n              age: 42,\r\n              address: 'London No. 1 Lake Park',\r\n              tags: ['loser'],\r\n            },\r\n            {\r\n              key: 'd3',\r\n              name: '内容文本，点击可进入详情123',\r\n              age: 32,\r\n              address: 'Sidney No. 1 Lake Park',\r\n              tags: ['cool', 'teacher'],\r\n            },\r\n          ];\r\n          export default {\r\n            name: 'tableviews',\r\n            data() {\r\n              return {\r\n                selectedData: [],\r\n                selectedDataKeys: [],\r\n                columns,\r\n                data,\r\n              };\r\n            },\r\n            computed: {\r\n              rowSelection() {\r\n                return {\r\n                  columnWidth: 40,\r\n                  selectedRowKeys: this.selectedDataKeys, // 控制选择\r\n                };\r\n              }\r\n            }\r\n          };\r\n        </code>\r\n        </pre>\r\n    <api-table :data=\"tableData\"></api-table>\r\n  </div>\r\n</template>\r\n<script>\r\nconst columns = [\r\n  {\r\n    title: '标题',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    scopedSlots: { customRender: 'name' },\r\n    width: 200,\r\n    filters: [\r\n      {\r\n        text: 'Joe',\r\n        value: 'Joe',\r\n      },\r\n      {\r\n        text: 'Jim',\r\n        value: 'Jim',\r\n      },\r\n    ],\r\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n    sorter: (a, b) => a.name.length - b.name.length,\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    ellipsis: true,\r\n    width: 200,\r\n  },\r\n  {\r\n    title: 'Tags',\r\n    key: 'tags',\r\n    dataIndex: 'tags',\r\n    scopedSlots: { customRender: 'tags' },\r\n    width: 200,\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: 'd1',\r\n    name: '内容文本，点击可进入详情1',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park  New York NoNew York NoNew York NoNew York NoNew York NoNew York NoNew York No',\r\n    tags: ['nice', 'developer'],\r\n  },\r\n  {\r\n    key: 'd2',\r\n    name: '内容文本，点击可进入详情12',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n  },\r\n  {\r\n    key: 'd3',\r\n    name: '内容文本，点击可进入详情123',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n  },\r\n];\r\nexport default {\r\n  name: 'tableviews',\r\n  data() {\r\n    return {\r\n      selectedData: [],\r\n      selectedDataKeys: [],\r\n      columns,\r\n      data,\r\n      tableData: [\r\n        {\r\n          params: 'components',\r\n          explain:\r\n            'components 是 antd 就有的 API，为了支持表格的拖拽需要对 components 进行设置，所以封装了一个全局的 $YGetTableDragHeader 方法，只需传入 columns 参数，就会返回支持拖拽的对象，将其赋值给 components 就可支持表格拖拽功能；至于将来想要修改 component 参数，可以在继承该对象的基础上进行修改即可。注意：只有带有 width 且 width 为数字的 columns 列才支持拖拽',\r\n          type: 'Object',\r\n        },\r\n        { params: 'v-model', explain: '绑定表格选中的数据，不需要每个表格组件写选择事件', type: 'Array', default: '可不传，但建议绑定' },\r\n        {\r\n          params: 'modelKeys',\r\n          explain: '绑定表格选中的数据key，必须以 modelKeys.sync 的方式绑定',\r\n          type: 'Array',\r\n          default: '可不传，但表格作为受控组件的时候必须要传',\r\n        },\r\n        {\r\n          params: 'rowSelection的selectedRowKeys',\r\n          explain:\r\n            'rowSelection的具体配置可以查看 antd 的 API，其下的 selectedRowKeys 属性可使表格成为受控组件，使用该值的时候一定要用 modelKeys.sync 绑定',\r\n          type: 'Array',\r\n          default: '建议和 modelKeys.sync 绑定同一个变量，js 修改该变量，即可修改表格的选中状态',\r\n        },\r\n        {\r\n          params: 'rowClick',\r\n          explain:\r\n            '控制表格的行是否支持点击选中，使用该属性时必须得要绑定 modelKeys 和使用rowSelection的selectedRowKeys，使表格成为受控组件。',\r\n          type: 'Boolean',\r\n          default: 'true',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    rowSelection() {\r\n      return {\r\n        columnWidth: 40,\r\n        selectedRowKeys: this.selectedDataKeys, // 控制选择\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./table.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./table.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./table.vue?vue&type=template&id=50202112&\"\nimport script from \"./table.vue?vue&type=script&lang=js&\"\nexport * from \"./table.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}