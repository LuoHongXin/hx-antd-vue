(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["form"],{"15b9":function(e,a,t){},b513:function(e,a,t){"use strict";t.r(a);var n=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",[t("a-tabs",{attrs:{type:"card"}},[t("a-tab-pane",{key:"1",attrs:{tab:"表单验证"}},[t("rules-from")],1),t("a-tab-pane",{key:"2",attrs:{tab:"动态增减表单项"}},[t("dynamic-validate-form")],1)],1),t("title-detail",{attrs:{title:"form",detail:""}}),t("api-table",{attrs:{data:e.tableData}}),t("title-detail",{attrs:{title:"Form事件",detail:""}}),t("api-table",{attrs:{data:e.tableDataChange}}),t("title-detail",{attrs:{title:"Form.create(options) | this.$form.createForm(this, options)",detail:""}}),e._v(" 单文件 template 使用方式 "),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s('<template>\n        <a-form :form="form" />\n      </template>\n      <script>\n        export default {\n          beforeCreate() {\n            this.form = this.$form.createForm(this, options);\n          },\n        };\n      <\/script>')}},[e._v("\n      ")]),e._v("\n  ")]),e._v(" jsx 使用方式，使用方式和 React 版 antd 一致 "),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s("const CustomizedForm = {};\n\n      CustomizedForm = Form.create({})(CustomizedForm);")}},[e._v("\n      ")]),e._v("\n  ")]),t("title-detail",{attrs:{title:"options",detail:""}}),t("api-table",{attrs:{data:e.tableDataOptions}}),t("title-detail",{attrs:{title:"经过 Form.create 包装的组件将会自带 this.form 属性",detail:""}}),t("api-table",{attrs:{data:e.tableDataFn}}),t("title-detail",{attrs:{title:"validateFields/validateFieldsAndScroll",detail:""}}),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s("const {\n        form: { validateFields },\n      } = this;\n      validateFields((errors, values) => {\n        // ...\n      });\n      validateFields(['field1', 'field2'], (errors, values) => {\n        // ...\n      });\n      validateFields(['field1', 'field2'], options, (errors, values) => {\n        // ...\n      });")}},[e._v("\n      ")]),e._v("\n  ")]),t("api-table",{attrs:{data:e.tableDaValidateFields}}),t("title-detail",{attrs:{title:"validateFields 的 callback 参数示例 #",detail:"errors:"}}),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s('{\n        "userName": {\n          "errors": [\n            {\n              "message": "Please input your username!",\n              "field": "userName"\n            }\n          ]\n        },\n        "password": {\n          "errors": [\n            {\n              "message": "Please input your Password!",\n              "field": "password"\n            }\n          ]\n        }\n      }')}},[e._v("\n      ")]),e._v("\n  ")]),t("title-detail",{attrs:{title:"",detail:"values:"}}),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s('{\n        "userName": "username",\n        "password": "password",\n      }')}},[e._v("\n      ")]),e._v("\n  ")]),t("title-detail",{attrs:{title:"Form.Item",detail:""}}),t("api-table",{attrs:{data:e.tableDataItem}}),e._v(" 注意： # Form.Item 会对唯一子元素进行劫持，并监听 blur 和 change 事件，来达到自动校验的目的，所以请确保表单域没有其它元素包裹。如果有多个子元素，将只会监听第一个子元素的变化。 如果要监听的表单域不满足自动监听的条件，可以通过如下方式关联表单域： "),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s('<a-form-model-item prop="form.name" ref="name" :autoLink="false">\n        <a-input v-model="other" />\n        <span>hahha</span>\n        <div>\n          <a-input\n            v-model="form.name"\n            @blur="() => {$refs.name.onFieldBlur()}"\n            @change="() => {$refs.name.onFieldChange()}"\n          />\n        </div>\n      </a-form-model-item>')}},[e._v("\n      ")]),e._v("\n  ")]),t("title-detail",{attrs:{title:"校验规则",detail:""}}),t("api-table",{attrs:{data:e.tableDataRules}})],1)},r=[],s=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("com-show",[t("y-form",{attrs:{form:e.form},on:{submit:e.handleSubmit}},[t("y-form-item",e._b({attrs:{label:"E-mail"}},"y-form-item",e.formItemLayout,!1),[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["email",{rules:[{type:"email",message:"The input is not valid E-mail!"},{required:!0,message:"Please input your E-mail!"}]}],expression:"[\n          'email',\n          {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          },\n        ]"}]})],1),t("y-form-item",e._b({attrs:{label:"Password","has-feedback":""}},"y-form-item",e.formItemLayout,!1),[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["password",{rules:[{required:!0,message:"Please input your password!"},{validator:e.validateToNextPassword}]}],expression:"[\n          'password',\n          {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          },\n        ]"}],attrs:{type:"password"}})],1),t("y-form-item",e._b({attrs:{label:"Confirm Password","has-feedback":""}},"y-form-item",e.formItemLayout,!1),[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["confirm",{rules:[{required:!0,message:"Please confirm your password!"},{validator:e.compareToFirstPassword}]}],expression:"[\n          'confirm',\n          {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          },\n        ]"}],attrs:{type:"password"},on:{blur:e.handleConfirmBlur}})],1),t("y-form-item",e._b({},"y-form-item",e.formItemLayout,!1),[t("span",{attrs:{slot:"label"},slot:"label"},[e._v(" Nickname  "),t("y-tooltip",{attrs:{title:"What do you want others to call you?",getPopupContainer:e.getPopupContainer}},[t("y-svg-icon",{staticStyle:{width:"16px",height:"16px"},attrs:{"icon-class":"formTipsIcon"}})],1)],1),t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["nickname",{rules:[{required:!0,message:"Please input your nickname!",whitespace:!0}]}],expression:"[\n          'nickname',\n          {\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n          },\n        ]"}]})],1),t("y-form-item",e._b({attrs:{label:"Phone Number"}},"y-form-item",e.formItemLayout,!1),[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["phone",{rules:[{required:!0,message:"Please input your phone number!"}]}],expression:"[\n          'phone',\n          {\n            rules: [{ required: true, message: 'Please input your phone number!' }],\n          },\n        ]"}],staticStyle:{width:"100%"}},[t("y-select",{directives:[{name:"decorator",rawName:"v-decorator",value:["prefix",{initialValue:"86"}],expression:"['prefix', { initialValue: '86' }]"}],staticStyle:{width:"70px"},attrs:{slot:"addonBefore"},slot:"addonBefore"},[t("y-select-option",{attrs:{value:"86"}},[e._v(" +86 ")]),t("y-select-option",{attrs:{value:"87"}},[e._v(" +87 ")])],1)],1)],1),t("y-form-item",e._b({attrs:{label:"Website"}},"y-form-item",e.formItemLayout,!1),[t("y-auto-complete",{directives:[{name:"decorator",rawName:"v-decorator",value:["website",{rules:[{required:!0,message:"Please input website!"}]}],expression:"['website', { rules: [{ required: true, message: 'Please input website!' }] }]"}],attrs:{placeholder:"website"},on:{change:e.handleWebsiteChange}},[t("template",{slot:"dataSource"},e._l(e.autoCompleteResult,(function(a){return t("y-select-option",{key:a},[e._v(" "+e._s(a)+" ")])})),1),t("y-input")],2)],1),t("y-form-item",e._b({attrs:{label:"Captcha",extra:"We must make sure that your are a human."}},"y-form-item",e.formItemLayout,!1),[t("a-row",{attrs:{gutter:8}},[t("a-col",{attrs:{span:12}},[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["captcha",{rules:[{required:!0,message:"Please input the captcha you got!"}]}],expression:"['captcha', { rules: [{ required: true, message: 'Please input the captcha you got!' }] }]"}],attrs:{autoWidth:""}})],1),t("a-col",{attrs:{span:12}},[t("y-button",[e._v("Get captcha")])],1)],1)],1),t("y-form-item",e._b({},"y-form-item",e.tailFormItemLayout,!1),[t("y-checkbox",{directives:[{name:"decorator",rawName:"v-decorator",value:["agreement",{valuePropName:"checked"}],expression:"['agreement', { valuePropName: 'checked' }]"}]},[e._v(" I have read the "),t("a",{attrs:{href:""}},[e._v(" agreement ")])])],1),t("y-form-item",e._b({},"y-form-item",e.tailFormItemLayout,!1),[t("y-button",{attrs:{type:"primary","html-type":"submit"}},[e._v(" Register ")])],1)],1),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s(e.html)}},[e._v("\n      ")]),e._v("\n    ")]),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-javascript"},[e._v("\n        export default {\n          data() {\n            return {\n            confirmDirty: false,\n            autoCompleteResult: [],\n            formItemLayout: {\n              labelCol: {\n                xs: { span: 6 },\n                sm: { span: 4 },\n              },\n              wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n              },\n            },\n            tailFormItemLayout: {\n              wrapperCol: {\n                xs: {\n                  span: 24,\n                  offset: 0,\n                },\n                sm: {\n                  span: 16,\n                  offset: 8,\n                },\n              },\n            },\n            form: this.$form.createForm(this, { name: 'register' }),\n          };\n        },\n        methods: {\n          handleSubmit(e) {\n            e.preventDefault();\n            this.form.validateFieldsAndScroll((err, values) => {\n              if (!err) {\n                console.log('Received values of form: ', values);\n              }\n            });\n          },\n          handleConfirmBlur(e) {\n            const value = e.target.value;\n            this.confirmDirty = this.confirmDirty || !!value;\n          },\n          compareToFirstPassword(rule, value, callback) {\n            const form = this.form;\n            if (value && value !== form.getFieldValue('password')) {\n              callback('Two passwords that you enter is inconsistent!');\n            } else {\n              callback();\n            }\n          },\n          validateToNextPassword(rule, value, callback) {\n            const form = this.form;\n            if (value && this.confirmDirty) {\n              form.validateFields(['confirm'], { force: true });\n            }\n            callback();\n          },\n          handleWebsiteChange(value) {\n            let autoCompleteResult;\n            if (!value) {\n              autoCompleteResult = [];\n            } else {\n              autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n            }\n            this.autoCompleteResult = autoCompleteResult;\n          },\n        },\n      };\n      ")]),e._v("\n  ")])],1)},o=[],l=(t("d81d"),t("99af"),{data:function(){return{getPopupContainer:function(){return document.body},html:'<y-form :form="form" @submit="handleSubmit">\n        <y-form-item v-bind="formItemLayout" label="E-mail">\n          <y-input\n            v-decorator="[\n              \'email\',\n              {\n                rules: [\n                  {\n                    type: \'email\',\n                    message: \'The input is not valid E-mail!\',\n                  },\n                  {\n                    required: true,\n                    message: \'Please input your E-mail!\',\n                  },\n                ],\n              },\n            ]"\n          />\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout" label="Password" has-feedback>\n          <y-input\n            v-decorator="[\n              \'password\',\n              {\n                rules: [\n                  {\n                    required: true,\n                    message: \'Please input your password!\',\n                  },\n                  {\n                    validator: validateToNextPassword,\n                  },\n                ],\n              },\n            ]"\n            type="password"\n          />\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout" label="Confirm Password" has-feedback>\n          <y-input\n            v-decorator="[\n              \'confirm\',\n              {\n                rules: [\n                  {\n                    required: true,\n                    message: \'Please confirm your password!\',\n                  },\n                  {\n                    validator: compareToFirstPassword,\n                  },\n                ],\n              },\n            ]"\n            type="password"\n            @blur="handleConfirmBlur"\n          />\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout">\n          <span slot="label">\n            Nickname&nbsp;\n            <y-tooltip title="What do you want others to call you?" :getPopupContainer="getPopupContainer">\n             <y-svg-icon icon-class="formTipsIcon" style="width:16px;height:16px" />\n            </y-tooltip>\n          </span>\n          <y-input\n            v-decorator="[\n              \'nickname\',\n              {\n                rules: [{ required: true, message: \'Please input your nickname!\', whitespace: true }],\n              },\n            ]"\n          />\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout" label="Phone Number">\n          <y-input\n            v-decorator="[\n              \'phone\',\n              {\n                rules: [{ required: true, message: \'Please input your phone number!\' }],\n              },\n            ]"\n            style="width: 100%"\n          >\n            <y-select slot="addonBefore" v-decorator="[\'prefix\', { initialValue: \'86\' }]" style="width: 70px">\n              <y-select-option value="86">\n                +86\n              </y-select-option>\n              <y-select-option value="87">\n                +87\n              </y-select-option>\n            </y-select>\n          </y-input>\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout" label="Website">\n          <y-auto-complete\n            v-decorator="[\'website\', { rules: [{ required: true, message: \'Please input website!\' }] }]"\n            placeholder="website"\n            @change="handleWebsiteChange"\n          >\n            <template slot="dataSource">\n              <y-select-option v-for="website in autoCompleteResult" :key="website">\n                {{ website }}\n              </y-select-option>\n            </template>\n            <y-input />\n          </y-auto-complete>\n        </y-form-item>\n        <y-form-item v-bind="formItemLayout" label="Captcha" extra="We must make sure that your are a human.">\n          <a-row :gutter="8">\n            <a-col :span="12">\n              <y-input v-decorator="[\'captcha\', { rules: [{ required: true, message: \'Please input the captcha you got!\' }] }]" />\n            </a-col>\n            <a-col :span="12">\n              <y-button>Get captcha</y-button>\n            </a-col>\n          </a-row>\n        </y-form-item>\n        <y-form-item v-bind="tailFormItemLayout">\n          <y-checkbox v-decorator="[\'agreement\', { valuePropName: \'checked\' }]">\n            I have read the\n            <a href="">\n              agreement\n            </a>\n          </y-checkbox>\n        </y-form-item>\n        <y-form-item v-bind="tailFormItemLayout">\n          <y-button type="primary" html-type="submit">\n            Register\n          </y-button>\n        </y-form-item>\n      </y-form>',confirmDirty:!1,autoCompleteResult:[],formItemLayout:{labelCol:{xs:{span:6},sm:{span:4}},wrapperCol:{xs:{span:24},sm:{span:16}}},tailFormItemLayout:{wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}},form:this.$form.createForm(this,{name:"register"})}},methods:{handleSubmit:function(e){e.preventDefault(),this.form.validateFieldsAndScroll((function(e,a){e||console.log("Received values of form: ",a)}))},handleConfirmBlur:function(e){var a=e.target.value;this.confirmDirty=this.confirmDirty||!!a},compareToFirstPassword:function(e,a,t){var n=this.form;a&&a!==n.getFieldValue("password")?t("Two passwords that you enter is inconsistent!"):t()},validateToNextPassword:function(e,a,t){var n=this.form;a&&this.confirmDirty&&n.validateFields(["confirm"],{force:!0}),t()},handleWebsiteChange:function(e){var a;a=e?[".com",".org",".net"].map((function(a){return"".concat(e).concat(a)})):[],this.autoCompleteResult=a}}}),i=l,m=t("2877"),u=Object(m["a"])(i,s,o,!1,null,null,null),p=u.exports,d=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("com-show",[t("div",{attrs:{id:"components-form-demo-global-state"}},[t("customized-form",{attrs:{username:e.fields.username},on:{change:e.handleFormChange}}),t("pre",{staticClass:"language-bash"},[e._v("        "+e._s(JSON.stringify(e.fields,null,2))+"\n    ")])],1),t("title-detail",{attrs:{title:"代码展示",detail:""}}),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-html",domProps:{textContent:e._s(e.html)}},[e._v("\n      ")]),e._v("\n  ")]),t("pre",{staticClass:"line-numbers"},[e._v("      "),t("code",{staticClass:"language-javascript"},[e._v("\n      const CustomizedForm = {\n        props: ['username'],\n        template: `\n          "+e._s(e.jt)+"y-form layout='inline' :form=\"form\">\n            "+e._s(e.jt)+"y-form-item label='Username'>\n              "+e._s(e.jt)+"y-input\n                v-decorator=\"[\n                  'username',\n                  {\n                    rules: [{ required: true, message: 'Username is required!' }],\n                  }\n                ]\"\n              />\n            "+e._s(e.jt)+"/y-form-item>\n          "+e._s(e.jt)+"/y-form>\n        `,\n        created() {\n          this.form = this.$form.createForm(this, {\n            name: 'global_state',\n            onFieldsChange: (_, changedFields) => {\n              this.$emit('change', changedFields);\n            },\n            mapPropsToFields: () => {\n              return {\n                username: this.$form.createFormField({\n                  ...this.username,\n                  value: this.username.value,\n                }),\n              };\n            },\n            onValuesChange(_, values) {\n              console.log(values);\n            },\n          });\n        },\n        watch: {\n          username() {\n            this.form.updateFields({\n              username: this.$form.createFormField({\n                ...this.username,\n                value: this.username.value,\n              }),\n            });\n          },\n        },\n      };\n\n      export default {\n        components: {\n          CustomizedForm,\n        },\n        data() {\n          return {\n            fields: {\n              username: {\n                value: 'benjycui',\n              },\n            },\n          };\n        },\n        methods: {\n          handleFormChange(changedFields) {\n            console.log('changedFields', changedFields);\n            this.fields = { ...this.fields, ...changedFields };\n          },\n        },\n      };\n      "+e._s(e.jt)+"/script>\n      "+e._s(e.jt)+"style>\n      #components-form-demo-global-state .language-bash {\n        max-width: 400px;\n        border-radius: 6px;\n        margin-top: 24px;\n      }\n      "+e._s(e.jt)+"/style>\n      ")]),e._v("\n    ")])],1)},c=[],f=t("5530"),y=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("y-form",{attrs:{layout:"inline",form:e.form}},[t("y-form-item",{attrs:{label:"Username"}},[t("y-input",{directives:[{name:"decorator",rawName:"v-decorator",value:["username",{rules:[{required:!0,message:"Username is required!"}]}],expression:"[\n        'username',\n        {\n          rules: [{ required: true, message: 'Username is required!' }],\n        },\n      ]"}]})],1)],1)},h=[],v={name:"CustomizedForm",props:["username"],created:function(){var e=this;this.form=this.$form.createForm(this,{name:"global_state",onFieldsChange:function(a,t){e.$emit("change",t)},mapPropsToFields:function(){return{username:e.$form.createFormField(Object(f["a"])(Object(f["a"])({},e.username),{},{value:e.username.value}))}},onValuesChange:function(e,a){console.log(a)}})},watch:{username:function(){this.form.updateFields({username:this.$form.createFormField(Object(f["a"])(Object(f["a"])({},this.username),{},{value:this.username.value}))})}}},b=v,g=Object(m["a"])(b,y,h,!1,null,null,null),F=g.exports,x={components:{CustomizedForm:F},data:function(){return{html:'<div id="components-form-demo-global-state">\n        <customized-form :username="fields.username" @change="handleFormChange" />\n        <pre class="language-bash">\n          {{ JSON.stringify(fields, null, 2) }}\n        </pre>\n      </div>',jt:"<",fields:{username:{value:"benjycui"}}}},methods:{handleFormChange:function(e){console.log("changedFields",e),this.fields=Object(f["a"])(Object(f["a"])({},this.fields),e)}}},w=x,C=(t("cf91"),Object(m["a"])(w,d,c,!1,null,null,null)),_=C.exports,P={name:"myFormModel",components:{RulesFrom:p,DynamicValidateForm:_},data:function(){return{tableData:[{params:"form",explain:"经 Form.create() 包装过的组件会自带 this.form 属性，如果使用 template 语法，可以使用 this.$form.createForm(this, options)",type:"object",default:"无"},{params:"hideRequiredMark",explain:"隐藏所有表单项的必选标记",type:"Boolean",default:"false"},{params:"labelAlign",explain:"label 标签的文本对齐方式",type:"'left' | 'right'",default:"'right'"},{params:"layout",explain:"表单布局",type:"'horizontal'|'vertical'|'inline'",default:"'horizontal'"},{params:"labelCol",explain:"label 标签布局，同 <Col> 组件，设置 span offset 值，如 {span: 3, offset: 12} 或 sm: {span: 3, offset: 12}",type:"object",default:""},{params:"wrapperCol",explain:"需要为输入控件设置布局样式时，使用该属性，用法同 labelCol",type:"object",default:""},{params:"selfUpdate",explain:"自定义字段更新逻辑，说明见下，需 1.3.17 版本以上",type:"boolean",default:!1},{params:"colon",explain:"配置 Form.Item 的 colon 的默认值 (只有在属性 layout 为 horizontal 时有效)",type:"boolean",default:!1}],tableDataChange:[{params:"submit",explain:"数据验证成功后回调事件",type:"Function(e:Event)"}],tableDataOptions:[{params:"prop",explain:"仅仅支持 Form.create({})(CustomizedForm)的使用方式，父组件需要映射到表单项上的属性声明(和vue 组件 props 一致)",type:"{ }",default:""},{params:"mapPropsToFields",explain:"把父组件的属性映射到表单项上（如：把 Redux store 中的值读出），需要对返回值中的表单域数据用 Form.createFormField 标记，如果使用$form.createForm 创建收集器，你可以将任何数据映射到 Field 中，不受父组件约束",type:"(props) => ({ [fieldName]: FormField { value } })"},{params:"name",explain:"设置表单域内字段 id 的前缀",type:""},{params:"validateMessages",explain:"默认校验信息，可用于把默认错误信息改为中文等，格式与 newMessages 返回值一致",type:"Object { [nested.path]: String }"},{params:"onFieldsChange",explain:"当 Form.Item 子节点的值发生改变时触发，可以把对应的值转存到 Redux store",type:"Function(props, fields)"},{params:"onValuesChange",explain:"任一表单域的值发生改变时的回调",type:"(props, values) => void"}],tableDataFn:[{params:"getFieldDecorator",explain:"用于和表单进行双向绑定，单文件 template 可以使用指令v-decorator进行绑定，详见下方描述"},{params:"getFieldError",explain:"获取某个输入控件的 Error",type:"Function(name)"},{params:"getFieldsError",explain:"获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error",type:"Function([names: string[]])"},{params:"getFieldsValue",explain:"获取一组输入控件的值，如不传入参数，则获取全部组件的值",type:"Function(props: array | string)"},{params:"getFieldValue",explain:"获取一个输入控件的值",type:"Function(fieldName: string)"},{params:"isFieldsTouched",explain:"判断是否任一输入控件经历过 getFieldDecorator 或 v-decorator 的值收集时机 options.trigger",type:"(names?: string[]) => boolean"},{params:"isFieldValidating",explain:"判断一个输入控件是否在校验状态",type:"Function(name)"},{params:"resetFields",explain:"重置一组输入控件的值（为 initialValue）与状态，如不传入参数，则重置所有组件",type:"Function([names: string[]])"},{params:"setFields",explain:"设置一组输入控件的值与错误状态。",type:"Function({ [fieldName]: { value: any, errors: [Error] } })"},{params:"setFieldsValue",explain:"设置一组输入控件的值",type:"Function({ [fieldName]: value })"},{params:"validateFields",explain:"校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件",type:"Function([fieldNames: string[]], [options: object], callback: Function(errors, values))"},{params:"validateFieldsAndScroll",explain:"与 validateFields 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围",type:"参考 validateFields"}],tableDaValidateFields:[{params:"options.first",explain:"若为 true，则每一表单域的都会在碰到第一个失败了的校验规则后停止校验",type:"boolean",default:"false"},{params:"options.firstFields",explain:"指定表单域会在碰到第一个失败了的校验规则后停止校验",type:"String[ ]",default:"[ ]"},{params:"options.force",explain:"对已经校验过的表单域，在 validateTrigger 再次被触发时是否再次校验",type:"boolean",default:"false"},{params:"options.scroll",explain:"定义 validateFieldsAndScroll 的滚动行为，详细配置见 dom-scroll-into-view config",type:"Object",default:"{ }"}],tableDataItem:[{params:"htmlFor",explain:"设置子元素 label htmlFor 属性",type:"string"},{params:"validateStatus",explain:"校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'",type:"string"},{params:"selfUpdate",explain:"自定义字段更新逻辑，你可以通过 Form 的 selfUpdate 进行统一设置。当和 Form 同时设置时，以 Item 为准。 说明见下 需 1.3.17 版本以上",type:"boolean",default:!1},{params:"rules",explain:"表单验证规则",type:"object | array"},{params:"autoLink",explain:"是否自动关联表单域，对于大部分情况都可以使用自动关联，如果不满足自动关联的条件，可以手动关联，参见下方注意事项",type:"Boolean",default:"true"},{params:"colon",explain:"配合 label 属性使用，表示是否显示 label 后面的冒号",type:"boolean",default:"true"},{params:"extra",explain:"额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。",type:"string|slot",default:"'horizontal'"},{params:"labelCol",explain:"label 标签布局，同 <Col> 组件，设置 span offset 值，如 {span: 3, offset: 12} 或 sm: {span: 3, offset: 12}",type:"object",default:""},{params:"wrapperCol",explain:"需要为输入控件设置布局样式时，使用该属性，用法同 labelCol",type:"object",default:""},{params:"hasFeedback",explain:"配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用",type:"boolean",default:!1},{params:"help",explain:"提示信息，如不设置，则会根据校验规则自动生成",type:"string|slot"},{params:"label",explain:"label 标签的文本",type:"string|slot"}],tableDataRules:[{params:"enum",explain:"枚举类型",type:"string"},{params:"len",explain:"字段长度",type:"number"},{params:"max",explain:"最大长度",type:"number"},{params:"min",explain:"最小长度",type:"number"},{params:"message",explain:"校验文案",type:"string"},{params:"pattern",explain:"正则表达式校验",type:"RegExp"},{params:"required",explain:"是否必选",type:"boolean",default:"false"},{params:"transform",explain:"校验前转换字段值",type:"function(value) => transformedValue:any"},{params:"type",explain:"内建校验类型，可选项",type:"string",default:"'string'"},{params:"validator",explain:"自定义校验（注意，callback 必须被调用）",type:"function(rule, value, callback)"},{params:"whitespace",explain:"必选时，空格是否会被视为错误",type:"boolean",default:"false"}]}}},k=P,I=Object(m["a"])(k,n,r,!1,null,null,null);a["default"]=I.exports},cf91:function(e,a,t){"use strict";t("15b9")}}]);