{"version":3,"sources":["webpack:///./examples/views/components-views/treeCustom/index.vue?7cfe","webpack:///./examples/views/components-views/treeCustom/tree1.vue?959c","webpack:///examples/views/components-views/treeCustom/tree1.vue","webpack:///./examples/views/components-views/treeCustom/tree1.vue?6a1b","webpack:///./examples/views/components-views/treeCustom/tree1.vue","webpack:///./examples/views/components-views/treeCustom/tree2.vue?bc88","webpack:///examples/views/components-views/treeCustom/tree2.vue","webpack:///./examples/views/components-views/treeCustom/tree2.vue?63c7","webpack:///./examples/views/components-views/treeCustom/tree2.vue","webpack:///./examples/views/components-views/treeCustom/tree3.vue?08bb","webpack:///examples/views/components-views/treeCustom/tree3.vue","webpack:///./examples/views/components-views/treeCustom/tree3.vue?3716","webpack:///./examples/views/components-views/treeCustom/tree3.vue","webpack:///./examples/views/components-views/treeCustom/tree4.vue?a783","webpack:///examples/views/components-views/treeCustom/tree4.vue","webpack:///./examples/views/components-views/treeCustom/tree4.vue?41ef","webpack:///./examples/views/components-views/treeCustom/tree4.vue","webpack:///./examples/views/components-views/treeCustom/tree5.vue?8bdb","webpack:///examples/views/components-views/treeCustom/tree5.vue","webpack:///./examples/views/components-views/treeCustom/tree5.vue?4e25","webpack:///./examples/views/components-views/treeCustom/tree5.vue","webpack:///examples/views/components-views/treeCustom/index.vue","webpack:///./examples/views/components-views/treeCustom/index.vue?a932","webpack:///./examples/views/components-views/treeCustom/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","declareList","key","tableData","tableData2","tableData3","tableData4","tableData5","staticRenderFns","staticStyle","replaceFields","treeData","on","onSelect","domProps","_s","html","js","name","data","title","methods","console","log","selectedKeys","info","component","commonOperates","onLoadData","handleSelect","model","value","callback","$$v","aa","expression","slot","treeData2","Promise","treeNode","dataRef","children","resolve","setTimeout","handleCreat","item","onDragEnter","onDrop","forEach","index","arr","loop","dragKey","splice","dragObj","dropToGap","dropKey","ar","i","dropPosition","push","html2","components","handleDelete"],"mappings":"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","file":"js/treeCustom.363c57b5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('title-detail',{attrs:{\"title\":\"带图标Tree 树形控件\",\"detail\":\"体现父子层级关系的信息组织方式。\"}}),_c('h3',{staticClass:\"fun-title\"},[_vm._v(\"代码演示\")]),_c('declareList',{attrs:{\"title\":\"通用原则\",\"value\":_vm.declareList}}),_c('y-tabs',{attrs:{\"default-active-key\":\"1\"}},[_c('y-tab-pane',{key:\"1\",attrs:{\"tab\":\"基本用法\"}},[_c('tree1')],1),_c('y-tab-pane',{key:\"2\",attrs:{\"tab\":\"带图标、提示框、操作栏、异步加载用法\"}},[_c('tree2')],1),_c('y-tab-pane',{key:\"3\",attrs:{\"tab\":\"树节点拖拽用法\"}},[_c('tree3')],1),_c('y-tab-pane',{key:\"4\",attrs:{\"tab\":\"严格关系\"}},[_c('tree4')],1),_c('y-tab-pane',{key:\"5\",attrs:{\"tab\":\"不带图标右键操作\"}},[_c('tree5')],1)],1),_c('api-table',{attrs:{\"data\":_vm.tableData}}),_c('api-table',{attrs:{\"title\":\"事件\",\"data\":_vm.tableData2}}),_c('api-table',{attrs:{\"title\":\"TreeNode props\",\"detail\":\"结点描述数据对象，是 treeNodes 中的一项，TreeNode 使用相同的 API。\",\"data\":_vm.tableData3}}),_c('api-table',{attrs:{\"title\":\"DirectoryTree props\",\"data\":_vm.tableData4}}),_c('api-table',{attrs:{\"title\":\"treeData相关参数说明\",\"data\":_vm.tableData5}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('funTitleDetail',{attrs:{\"title\":\"基本用法\",\"detail\":\"最简单的用法，禁用，默认展开等功能。\"}}),_c('div',{staticStyle:{\"width\":\"300px\"}},[_c('y-custom-tree',{attrs:{\"replaceFields\":_vm.replaceFields,\"default-expanded-keys\":['0-0', '0-0-0'],\"treeData\":_vm.treeData,\"showTooltip\":false},on:{\"select\":_vm.onSelect}})],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\",domProps:{\"textContent\":_vm._s(_vm.js)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <funTitleDetail title=\"基本用法\" detail=\"最简单的用法，禁用，默认展开等功能。\"></funTitleDetail>\r\n    <!-- 组件展示 -->\r\n    <div style=\"width:300px\">\r\n      <!-- 组件展示 -->\r\n      <y-custom-tree\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        @select=\"onSelect\"\r\n        :treeData=\"treeData\"\r\n        :showTooltip=\"false\"\r\n      >\r\n      </y-custom-tree>\r\n    </div>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\" v-text=\"js\">\r\n        </code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'myTree1',\r\n  data() {\r\n    return {\r\n      replaceFields: {\r\n        title: 'name',\r\n      },\r\n      treeData: [\r\n        {\r\n          name: 'parent',\r\n          key: '0-0',\r\n          class: 'no-style', // 添加此类名，标题不会有任何样式\r\n          children: [\r\n            {\r\n              name: 'parent 1-0 ',\r\n              key: '0-0-0',\r\n              disabled: true,\r\n              children: [\r\n                { name: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n                { name: 'leaf123', key: '0-0-0-1' },\r\n              ],\r\n            },\r\n            {\r\n              name: 'parent 1-1  12222222222222222222222222222222222222222',\r\n              key: '0-0-1',\r\n              children: [{ key: '0-0-1-0', name: 'leaf1235' }],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      html: `<div style=\"width:300px\">\r\n      <!-- 组件展示 -->\r\n      <y-custom-tree :default-expanded-keys=\"['0-0', '0-0-0']\" @select=\"onSelect\" :treeData=\"treeData\" :showTooltip=\"false\"> </y-custom-tree>\r\n      </div>`,\r\n      js: `\r\n      export default {\r\n        name: 'myTree1',\r\n        data() {\r\n          return {\r\n            treeData: [\r\n              {\r\n                title: 'parent 1',\r\n                class: 'no-style', // 添加此类名，标题不会有任何样式\r\n                key: '0-0',\r\n                children: [\r\n                  {\r\n                    title: 'parent 1-0',\r\n                    key: '0-0-0',\r\n                    disabled: true,\r\n                    children: [\r\n                      { title: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n                      { title: 'leaf123', key: '0-0-0-1' },\r\n                    ],\r\n                  },\r\n                  {\r\n                    title: 'parent 1-1',\r\n                    key: '0-0-1',\r\n                    children: [{ key: '0-0-1-0', title: 'leaf1235' }],\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          };\r\n        },\r\n      };\r\n    `,\r\n    };\r\n  },\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log('selected', selectedKeys, info);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree1.vue?vue&type=template&id=3df3322d&\"\nimport script from \"./tree1.vue?vue&type=script&lang=js&\"\nexport * from \"./tree1.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('funTitleDetail',{attrs:{\"title\":\"带图标、提示框、操作栏、异步加载用法\",\"detail\":\"通过slot插槽方式,slot名字与数据源节点的slots: { icon: 'smile' },icon里的值一致则渲染对应图标内容。\"}}),_c('div',{staticStyle:{\"width\":\"300px\"}},[_c('h3',{staticClass:\"fun-title\"},[_vm._v(\"大尺寸\")]),_c('p',[_vm._v(\"check模式\")]),_c('y-custom-tree',{attrs:{\"checkable\":\"\",\"nodeHeightSize\":\"s\",\"default-expanded-keys\":['0-0', '0-0-0'],\"treeData\":_vm.treeData,\"operates\":_vm.commonOperates,\"load-data\":_vm.onLoadData},on:{\"select\":_vm.handleSelect},model:{value:(_vm.aa),callback:function ($$v) {_vm.aa=$$v},expression:\"aa\"}},[_c('template',{slot:\"smile\"},[_c('y-svg-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"icon-class\":\"eyes_visible\"}})],1),_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"user\",\"type\":\"user\"},slot:\"user\"})],2),_c('p',[_vm._v(\"普通模式\")]),_c('y-custom-tree',{attrs:{\"default-expanded-keys\":['0-0', '0-0-0'],\"treeData\":_vm.treeData,\"operates\":_vm.commonOperates},on:{\"select\":_vm.handleSelect}},[_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"smile\",\"type\":\"smile\"},slot:\"smile\"}),_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"user\",\"type\":\"user\"},slot:\"user\"})],1),_c('h3',{staticClass:\"fun-title\"},[_vm._v(\"小尺寸\")]),_c('y-custom-tree',{attrs:{\"default-expanded-keys\":['0-0', '0-0-0'],\"treeData\":_vm.treeData2,\"operates\":_vm.commonOperates,\"load-data\":_vm.onLoadData,\"operateTriggerMethod\":['hover'],\"operatePlacement\":\"topRight\",\"showTooltip\":false}},[_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"smile\",\"type\":\"smile\"},slot:\"smile\"}),_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"user\",\"type\":\"user\"},slot:\"user\"})],1)],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\",domProps:{\"textContent\":_vm._s(_vm.js)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <funTitleDetail\r\n      title=\"带图标、提示框、操作栏、异步加载用法\"\r\n      detail=\"通过slot插槽方式,slot名字与数据源节点的slots: { icon: 'smile' },icon里的值一致则渲染对应图标内容。\"\r\n    ></funTitleDetail>\r\n    <div style=\"width:300px\">\r\n      <!-- 组件展示 -->\r\n      <h3 class=\"fun-title\">大尺寸</h3>\r\n      <p>check模式</p>\r\n      <y-custom-tree\r\n        checkable\r\n        v-model=\"aa\"\r\n        nodeHeightSize=\"s\"\r\n        @select=\"handleSelect\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        :treeData=\"treeData\"\r\n        :operates=\"commonOperates\"\r\n        :load-data=\"onLoadData\"\r\n      >\r\n        <template slot=\"smile\">\r\n          <y-svg-icon icon-class=\"eyes_visible\" style=\"width:16px;height:16px\" />\r\n        </template>\r\n        <a-icon slot=\"user\" type=\"user\" style=\"width:16px;height:16px\" />\r\n      </y-custom-tree>\r\n      <p>普通模式</p>\r\n      <y-custom-tree @select=\"handleSelect\" :default-expanded-keys=\"['0-0', '0-0-0']\" :treeData=\"treeData\" :operates=\"commonOperates\">\r\n        <a-icon slot=\"smile\" type=\"smile\" style=\"width:16px;height:16px\" />\r\n        <a-icon slot=\"user\" type=\"user\" style=\"width:16px;height:16px\" />\r\n      </y-custom-tree>\r\n      <h3 class=\"fun-title\">小尺寸</h3>\r\n      <y-custom-tree\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        :treeData=\"treeData2\"\r\n        :operates=\"commonOperates\"\r\n        :load-data=\"onLoadData\"\r\n        :operateTriggerMethod=\"['hover']\"\r\n        operatePlacement=\"topRight\"\r\n        :showTooltip=\"false\"\r\n      >\r\n        <a-icon slot=\"smile\" type=\"smile\" style=\"width:16px;height:16px\" />\r\n        <a-icon slot=\"user\" type=\"user\" style=\"width:16px;height:16px\" />\r\n      </y-custom-tree>\r\n    </div>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\" v-text=\"js\">\r\n        </code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'myTree2',\r\n  data() {\r\n    return {\r\n      aa: ['0-0-0'],\r\n      html: `\r\n      <div style=\"width:300px\">\r\n      <!-- 组件展示 -->\r\n       <h3 class=\"fun-title\">大尺寸</h3>\r\n       <y-custom-tree\r\n          checkable\r\n          v-model=\"aa\"\r\n           nodeHeightSize=\"s\"\r\n          @select=\"handleSelect\"\r\n          :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n          :treeData=\"treeData\"\r\n          :operates=\"commonOperates\"\r\n          :load-data=\"onLoadData\"\r\n        >\r\n        <a-icon slot=\"smile\" type=\"smile\" />\r\n        <a-icon slot=\"user\" type=\"user\" />\r\n      </y-custom-tree>\r\n      <y-custom-tree\r\n        @select=\"handleSelect\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        :treeData=\"treeData\"\r\n        :operates=\"commonOperates\"\r\n        :load-data=\"onLoadData\"\r\n      >\r\n        <template slot=\"smile\">\r\n          <y-svg-icon icon-class=\"eyes_visible\" style=\"width:14px;height:14px\" />\r\n        </template>\r\n        <a-icon slot=\"user\" type=\"user\" />\r\n      </y-custom-tree>\r\n      <h3 class=\"fun-title\">小尺寸</h3>\r\n      <y-custom-tree\r\n        @select=\"handleSelect\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        :treeData=\"treeData\"\r\n        :operates=\"commonOperates\"\r\n        :load-data=\"onLoadData\"\r\n        :operateTriggerMethod=\"['hover']\"\r\n        operatePlacement=\"topRight\"\r\n        :showTooltip=\"false\"\r\n        nodeHeightSize=\"m\"\r\n      >\r\n        <a-icon slot=\"smile\" type=\"smile\" />\r\n        <a-icon slot=\"user\" type=\"user\" />\r\n      </y-custom-tree>\r\n      </div>`,\r\n      js: `\r\n       export default {\r\n        name: 'MyCustomTree',\r\n        data() {\r\n          return {\r\n            aa: ['0-0-0'],\r\n            commonOperates: [\r\n              {\r\n                title: '全局方法1',\r\n                click: i => {\r\n                  // console.log(i, '点击了创建');\r\n                  this.handleCreat(i);\r\n                },\r\n              },\r\n              {\r\n                title: '全局方法2',\r\n                click: i => {\r\n                  this.handleDelete(i);\r\n                  // console.log(i, '点击了删除');\r\n                },\r\n              },\r\n            ],\r\n            treeData: [\r\n              {\r\n                title: '默认组织111166666666666666666666666666666666666',\r\n                key: '0-0',\r\n                isLeaf: false,\r\n                slots: { icon: 'smile' },\r\n                scopedSlots: { title: 'dropdown' },\r\n                operates: [\r\n                  {\r\n                    title: '创建',\r\n                    click: i => {\r\n                      // console.log(i, '点击了创建');\r\n                      this.handleCreat(i);\r\n                    },\r\n                  },\r\n                  {\r\n                    title: '删除',\r\n                    click: i => {\r\n                      this.handleDelete(i);\r\n                      // console.log(i, '点击了创建');\r\n                    },\r\n                  },\r\n                ],\r\n                children: [\r\n                  {\r\n                    title: '研发中心大树底',\r\n                    key: '0-0-0',\r\n                    isLeaf: true,\r\n                    slots: { icon: 'user' },\r\n                    scopedSlots: { title: 'dropdown' },\r\n                    operates: [\r\n                      {\r\n                        title: '创建子节点2',\r\n                        click: i => {\r\n                          // console.log(i, '点击了创建');\r\n                          this.handleCreat(i);\r\n                        },\r\n                      },\r\n                      {\r\n                        title: '删除子节点2',\r\n                        click: i => {\r\n                          this.handleDelete(i);\r\n                          // console.log(i, '点击了创建');\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                  { title: '测试部', key: '0-0-1', isLeaf: false, slots: { icon: 'user' }, scopedSlots: { title: 'dropdown' } },\r\n                ],\r\n              },\r\n            ],\r\n          };\r\n        },\r\n        methods: {\r\n          handleSelect(selectedKeys, info) {\r\n            console.log(selectedKeys, info, '选择了树节点');\r\n          },\r\n          //点击删除创建可以获取对应的节点信息\r\n          handleDelete(i) {\r\n            console.log('点击了删除', i);\r\n          },\r\n          handleCreat(i) {\r\n            console.log('点击了创建', i);\r\n          },\r\n          //异步加载的时候需要添加 isLeaf属性  isLeaf为true则代表为最后一层无法继续展开 isLeaf为false则代表是还可以继续展开\r\n          //如果是异步数据加这个方法进行加载\r\n          onLoadData(treeNode) {\r\n            return new Promise(resolve => {\r\n              if (treeNode.dataRef.children) {\r\n                resolve();\r\n                return;\r\n              }\r\n              //这里发异步请求 把setTimeout改成api请求 把请求回来的数据赋值给treeNode.dataRef.children\r\n              setTimeout(() => {\r\n                let asyncArray = [\r\n                  {\r\n                    title: '测试部1231',\r\n                    key: new Date().getTime(),\r\n                    // isLeaf: true,\r\n                    slots: { icon: 'smile' },\r\n                    scopedSlots: { title: 'dropdown' },\r\n                  },\r\n                ];\r\n                this.$set(treeNode.dataRef, 'children', asyncArray);\r\n                resolve();\r\n              }, 5000);\r\n            });\r\n          },\r\n        },\r\n      };\r\n      `,\r\n      commonOperates: [\r\n        {\r\n          title: '全局方法1',\r\n          click: i => {\r\n            this.handleCreat(i);\r\n          },\r\n        },\r\n        {\r\n          title: '全局方法2',\r\n          click: i => {\r\n            this.handleDelete(i);\r\n          },\r\n        },\r\n      ],\r\n      treeData: [\r\n        {\r\n          title: '默认组织1111666888888888888',\r\n          key: '0-0',\r\n          isLeaf: false,\r\n          disabled: true,\r\n          slots: { icon: 'smile' },\r\n          scopedSlots: { title: 'dropdown' },\r\n          operates: [\r\n            {\r\n              title: '创建',\r\n              click: i => {\r\n                this.handleCreat(i);\r\n              },\r\n            },\r\n            {\r\n              title: '删除',\r\n              click: i => {\r\n                this.handleDelete(i);\r\n              },\r\n            },\r\n          ],\r\n          children: [\r\n            {\r\n              title: '研发中心大树底1111111111111111111111111111111',\r\n              key: '0-0-0',\r\n              isLeaf: true,\r\n              slots: { icon: 'user' },\r\n              scopedSlots: { title: 'dropdown' },\r\n              operates: [\r\n                {\r\n                  title: '创建子节点2',\r\n                  click: i => {\r\n                    this.handleCreat(i);\r\n                  },\r\n                },\r\n                {\r\n                  title: '删除子节点2',\r\n                  click: i => {\r\n                    this.handleDelete(i);\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            { title: '测试部', key: '0-0-1', isLeaf: false, slots: { icon: 'user' }, scopedSlots: { title: 'dropdown' } },\r\n          ],\r\n        },\r\n      ],\r\n      treeData2: [\r\n        {\r\n          title: '默认组织1111666888888888888',\r\n          key: '0-0',\r\n          isLeaf: false,\r\n          slots: { icon: 'smile' },\r\n          operates: [\r\n            {\r\n              title: '创建',\r\n              click: i => {\r\n                this.handleCreat(i);\r\n              },\r\n            },\r\n            {\r\n              title: '删除',\r\n              click: i => {\r\n                this.handleDelete(i);\r\n              },\r\n            },\r\n          ],\r\n          children: [\r\n            {\r\n              title: '研发中心大树底1111111111111111111111111111111',\r\n              key: '0-0-0',\r\n              isLeaf: true,\r\n              slots: { icon: 'user' },\r\n              operates: [\r\n                {\r\n                  title: '创建子节点2',\r\n                  click: i => {\r\n                    this.handleCreat(i);\r\n                  },\r\n                },\r\n                {\r\n                  title: '删除子节点2',\r\n                  click: i => {\r\n                    this.handleDelete(i);\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            { title: '测试部', key: '0-0-1', isLeaf: false, slots: { icon: 'user' }, scopedSlots: { title: 'dropdown' } },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleSelect(selectedKeys, info) {\r\n      console.log(selectedKeys, info, '选择了树节点');\r\n    },\r\n    //异步加载的时候需要添加 isLeaf属性  isLeaf为true则代表为最后一层无法继续展开 isLeaf为false则代表是还可以继续展开isLeaf为false且该节点没有children属性则执行异步\r\n    //如果是异步数据加这个方法进行加载\r\n    onLoadData(treeNode) {\r\n      return new Promise(resolve => {\r\n        if (treeNode.dataRef.children) {\r\n          resolve();\r\n          return;\r\n        }\r\n        //这里发异步请求 把setTimeout改成api请求 这里需要通过this.$set响应式更改数据源\r\n        setTimeout(() => {\r\n          let asyncArray = [\r\n            {\r\n              title: '测试部1231',\r\n              key: new Date().getTime(),\r\n              // isLeaf: true,\r\n              slots: { icon: 'smile' },\r\n              scopedSlots: { title: 'dropdown' },\r\n            },\r\n          ];\r\n          this.$set(treeNode.dataRef, 'children', asyncArray);\r\n          resolve();\r\n        }, 5000);\r\n      });\r\n    },\r\n    handleCreat(item) {\r\n      console.log(item);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree2.vue?vue&type=template&id=4ceffd46&\"\nimport script from \"./tree2.vue?vue&type=script&lang=js&\"\nexport * from \"./tree2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('funTitleDetail',{attrs:{\"title\":\"树节点拖拽用法\",\"detail\":\"将节点拖拽到其他节点内部或前后。\"}}),_c('com-show',[_c('y-custom-tree',{attrs:{\"replaceFields\":_vm.replaceFields,\"default-expanded-keys\":['0-0', '0-0-0'],\"draggable\":\"\",\"treeData\":_vm.treeData},on:{\"dragenter\":_vm.onDragEnter,\"drop\":_vm.onDrop}})],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\"},[_vm._v(\"\\n        export default {\\n          data() {\\n            return {\\n              replaceFields: {\\n                title: 'name',\\n              },\\n              treeData: [\\n                {\\n                  name: 'parent 1',\\n                  key: '0-0',\\n                  class: 'no-style', // 添加此类名，标题不会有任何样式\\n                  children: [\\n                    {\\n                      name: 'parent 1-0',\\n                      key: '0-0-0',\\n                      disabled: true,\\n                      children: [\\n                        { name: 'leaf', key: '0-0-0-0', disableCheckbox: true },\\n                        { name: 'leaf123', key: '0-0-0-1' },\\n                      ],\\n                    },\\n                    {\\n                      name: 'parent 1-1',\\n                      key: '0-0-1',\\n                      children: [{ key: '0-0-1-0', name: 'leaf1235' }],\\n                    },\\n                  ],\\n                },\\n              ],\\n            };\\n          },\\n          methods: {\\n            // 拖动时触发\\n            onDragEnter(info) {\\n              console.log(info);\\n            },\\n            // 拖动停止\\n            onDrop(info) {\\n              let children = 'children'; //对应 children，可根据情况修改\\n              const dropKey = info.node.eventKey;\\n              const dragKey = info.dragNode.eventKey;\\n              const dropPos = info.node.pos.split('-');\\n              const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\\n              const loop = (data, key, callback) => {\\n                data.forEach((item, index, arr) => {\\n                  if (item.key === key) {\\n                    return callback(item, index, arr);\\n                  }\\n                  if (item[children]) {\\n                    return loop(item[children], key, callback);\\n                  }\\n                });\\n              };\\n              const data = [...this.treeData];\\n\\n              // Find dragObject\\n              let dragObj;\\n              loop(data, dragKey, (item, index, arr) => {\\n                arr.splice(index, 1);\\n                dragObj = item;\\n              });\\n              if (!info.dropToGap) {\\n                // Drop on the content\\n                loop(data, dropKey, item => {\\n                  item[children] = item[children] || [];\\n                  // where to insert 示例添加到尾部，可以是随意位置\\n                  item[children].push(dragObj);\\n                });\\n              } else if (\\n                (info.node[children] || []).length > 0 && // Has[children]\\n                info.node.expanded && // Is expanded\\n                dropPosition === 1 // On the bottom gap\\n              ) {\\n                loop(data, dropKey, item => {\\n                  item[children] = item[children] || [];\\n                  // where to insert 示例添加到尾部，可以是随意位置\\n                  item[children].unshift(dragObj);\\n                });\\n              } else {\\n                let ar;\\n                let i;\\n                loop(data, dropKey, (item, index, arr) => {\\n                  ar = arr;\\n                  i = index;\\n                });\\n                if (dropPosition === -1) {\\n                  ar.splice(i, 0, dragObj);\\n                } else {\\n                  ar.splice(i + 1, 0, dragObj);\\n                }\\n              }\\n              this.treeData = data;\\n            },\\n          },\\n        };\\n      \")]),_vm._v(\"\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <funTitleDetail title=\"树节点拖拽用法\" detail=\"将节点拖拽到其他节点内部或前后。\"></funTitleDetail>\r\n    <!-- 组件展示 -->\r\n    <!-- 组件展示 -->\r\n    <com-show>\r\n      <!-- 组件展示 -->\r\n      <y-custom-tree\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        @dragenter=\"onDragEnter\"\r\n        @drop=\"onDrop\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >\r\n      </y-custom-tree>\r\n    </com-show>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\">\r\n          export default {\r\n            data() {\r\n              return {\r\n                replaceFields: {\r\n                  title: 'name',\r\n                },\r\n                treeData: [\r\n                  {\r\n                    name: 'parent 1',\r\n                    key: '0-0',\r\n                    class: 'no-style', // 添加此类名，标题不会有任何样式\r\n                    children: [\r\n                      {\r\n                        name: 'parent 1-0',\r\n                        key: '0-0-0',\r\n                        disabled: true,\r\n                        children: [\r\n                          { name: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n                          { name: 'leaf123', key: '0-0-0-1' },\r\n                        ],\r\n                      },\r\n                      {\r\n                        name: 'parent 1-1',\r\n                        key: '0-0-1',\r\n                        children: [{ key: '0-0-1-0', name: 'leaf1235' }],\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              };\r\n            },\r\n            methods: {\r\n              // 拖动时触发\r\n              onDragEnter(info) {\r\n                console.log(info);\r\n              },\r\n              // 拖动停止\r\n              onDrop(info) {\r\n                let children = 'children'; //对应 children，可根据情况修改\r\n                const dropKey = info.node.eventKey;\r\n                const dragKey = info.dragNode.eventKey;\r\n                const dropPos = info.node.pos.split('-');\r\n                const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n                const loop = (data, key, callback) => {\r\n                  data.forEach((item, index, arr) => {\r\n                    if (item.key === key) {\r\n                      return callback(item, index, arr);\r\n                    }\r\n                    if (item[children]) {\r\n                      return loop(item[children], key, callback);\r\n                    }\r\n                  });\r\n                };\r\n                const data = [...this.treeData];\r\n\r\n                // Find dragObject\r\n                let dragObj;\r\n                loop(data, dragKey, (item, index, arr) => {\r\n                  arr.splice(index, 1);\r\n                  dragObj = item;\r\n                });\r\n                if (!info.dropToGap) {\r\n                  // Drop on the content\r\n                  loop(data, dropKey, item => {\r\n                    item[children] = item[children] || [];\r\n                    // where to insert 示例添加到尾部，可以是随意位置\r\n                    item[children].push(dragObj);\r\n                  });\r\n                } else if (\r\n                  (info.node[children] || []).length > 0 && // Has[children]\r\n                  info.node.expanded && // Is expanded\r\n                  dropPosition === 1 // On the bottom gap\r\n                ) {\r\n                  loop(data, dropKey, item => {\r\n                    item[children] = item[children] || [];\r\n                    // where to insert 示例添加到尾部，可以是随意位置\r\n                    item[children].unshift(dragObj);\r\n                  });\r\n                } else {\r\n                  let ar;\r\n                  let i;\r\n                  loop(data, dropKey, (item, index, arr) => {\r\n                    ar = arr;\r\n                    i = index;\r\n                  });\r\n                  if (dropPosition === -1) {\r\n                    ar.splice(i, 0, dragObj);\r\n                  } else {\r\n                    ar.splice(i + 1, 0, dragObj);\r\n                  }\r\n                }\r\n                this.treeData = data;\r\n              },\r\n            },\r\n          };\r\n        </code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'myTree3',\r\n  data() {\r\n    return {\r\n      html: `<y-custom-tree\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        @dragenter=\"onDragEnter\"\r\n        @drop=\"onDrop\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >\r\n      </y-custom-tree>`,\r\n      replaceFields: {\r\n        title: 'name',\r\n      },\r\n      treeData: [\r\n        {\r\n          name: 'parent 1',\r\n          key: '0-0',\r\n          class: 'no-style', // 添加此类名，标题不会有任何样式\r\n          children: [\r\n            {\r\n              name: 'parent 1-0',\r\n              key: '0-0-0',\r\n              disabled: true,\r\n              children: [\r\n                { name: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n                { name: 'leaf123', key: '0-0-0-1' },\r\n              ],\r\n            },\r\n            {\r\n              name: 'parent 1-1',\r\n              key: '0-0-1',\r\n              children: [{ key: '0-0-1-0', name: 'leaf1235' }],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    // 拖动时触发\r\n    onDragEnter(info) {\r\n      console.log(info);\r\n    },\r\n    // 拖动停止\r\n    onDrop(info) {\r\n      let children = 'children'; //对应 children，可根据情况修改\r\n      const dropKey = info.node.eventKey;\r\n      const dragKey = info.dragNode.eventKey;\r\n      const dropPos = info.node.pos.split('-');\r\n      const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n      const loop = (data, key, callback) => {\r\n        data.forEach((item, index, arr) => {\r\n          if (item.key === key) {\r\n            return callback(item, index, arr);\r\n          }\r\n          if (item[children]) {\r\n            return loop(item[children], key, callback);\r\n          }\r\n        });\r\n      };\r\n      const data = [...this.treeData];\r\n\r\n      // Find dragObject\r\n      let dragObj;\r\n      loop(data, dragKey, (item, index, arr) => {\r\n        arr.splice(index, 1);\r\n        dragObj = item;\r\n      });\r\n      if (!info.dropToGap) {\r\n        // Drop on the content\r\n        loop(data, dropKey, item => {\r\n          item[children] = item[children] || [];\r\n          // where to insert 示例添加到尾部，可以是随意位置\r\n          item[children].push(dragObj);\r\n        });\r\n      } else if (\r\n        (info.node[children] || []).length > 0 && // Has[children]\r\n        info.node.expanded && // Is expanded\r\n        dropPosition === 1 // On the bottom gap\r\n      ) {\r\n        loop(data, dropKey, item => {\r\n          item[children] = item[children] || [];\r\n          // where to insert 示例添加到尾部，可以是随意位置\r\n          item[children].unshift(dragObj);\r\n        });\r\n      } else {\r\n        let ar;\r\n        let i;\r\n        loop(data, dropKey, (item, index, arr) => {\r\n          ar = arr;\r\n          i = index;\r\n        });\r\n        if (dropPosition === -1) {\r\n          ar.splice(i, 0, dragObj);\r\n        } else {\r\n          ar.splice(i + 1, 0, dragObj);\r\n        }\r\n      }\r\n      this.treeData = data;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree3.vue?vue&type=template&id=1a88f2be&\"\nimport script from \"./tree3.vue?vue&type=script&lang=js&\"\nexport * from \"./tree3.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('funTitleDetail',{attrs:{\"title\":\"选中互相没关系\",\"detail\":\"checkStrictly 模式，选中节点与其它节点没有任何关系\"}}),_c('com-show',[_c('y-custom-tree',{attrs:{\"checkable\":\"\",\"checkStrictly\":\"\",\"replaceFields\":_vm.replaceFields,\"default-expanded-keys\":['0-0', '0-0-0'],\"draggable\":\"\",\"treeData\":_vm.treeData}})],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\",domProps:{\"textContent\":_vm._s(_vm.js)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n  \")]),_c('funTitleDetail',{attrs:{\"title\":\"子选父\",\"detail\":\"checkStrictly + strictCheckParent 模式，选中节点会自动选中以上关系的节点，但选父不会自动选以下关系节点\"}}),_c('com-show',[_c('y-custom-tree',{attrs:{\"checkable\":\"\",\"checkStrictly\":\"\",\"strictCheckParent\":\"\",\"replaceFields\":_vm.replaceFields,\"default-expanded-keys\":['0-0', '0-0-0'],\"draggable\":\"\",\"treeData\":_vm.treeData}})],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\",domProps:{\"textContent\":_vm._s(_vm.js)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <funTitleDetail title=\"选中互相没关系\" detail=\"checkStrictly 模式，选中节点与其它节点没有任何关系\"></funTitleDetail>\r\n    <!-- 组件展示 -->\r\n    <!-- 组件展示 -->\r\n    <com-show>\r\n      <!-- 组件展示 -->\r\n      <y-custom-tree\r\n        checkable\r\n        checkStrictly\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >\r\n      </y-custom-tree>\r\n    </com-show>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\" v-text=\"js\">\r\n        </code>\r\n    </pre>\r\n    <funTitleDetail\r\n      title=\"子选父\"\r\n      detail=\"checkStrictly + strictCheckParent 模式，选中节点会自动选中以上关系的节点，但选父不会自动选以下关系节点\"\r\n    ></funTitleDetail>\r\n    <com-show>\r\n      <!-- 组件展示 -->\r\n      <y-custom-tree\r\n        checkable\r\n        checkStrictly\r\n        strictCheckParent\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >\r\n      </y-custom-tree>\r\n    </com-show>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\" v-text=\"js\">\r\n        </code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'myTree4',\r\n  data() {\r\n    return {\r\n      html: `<y-custom-tree\r\n        checkable\r\n        checkStrictly\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >`,\r\n      html2: `<y-custom-tree\r\n        checkable\r\n        checkStrictly\r\n        strictCheckParent\r\n        :replaceFields=\"replaceFields\"\r\n        :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n        draggable\r\n        :treeData=\"treeData\"\r\n      >\r\n      </y-custom-tree>`,\r\n      js: ` data() {\r\n                return {\r\n                    replaceFields: {\r\n                        title: 'name',\r\n                    },\r\n                    treeData: [\r\n                        {\r\n                        name: 'parent 1',\r\n                        key: '0-0',\r\n                        class: 'no-style', // 添加此类名，标题不会有任何样式\r\n                        children: [\r\n                            {\r\n                            name: 'parent 1-0',\r\n                            key: '0-0-0',\r\n                            children: [\r\n                                { name: 'leaf', key: '0-0-0-0' },\r\n                                { name: 'leaf123', key: '0-0-0-1' },\r\n                            ],\r\n                            },\r\n                            {\r\n                            name: 'parent 1-1',\r\n                            key: '0-0-1',\r\n                            children: [{ key: '0-0-1-0', name: 'leaf1235' }],\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n                };\r\n            },`,\r\n      replaceFields: {\r\n        title: 'name',\r\n      },\r\n      treeData: [\r\n        {\r\n          name: 'parent 1',\r\n          key: '0-0',\r\n          checkable: false,\r\n          class: 'no-style', // 添加此类名，标题不会有任何样式\r\n          children: [\r\n            {\r\n              name: 'parent 1-0',\r\n              key: '0-0-0',\r\n              children: [\r\n                { name: 'leaf', key: '0-0-0-0' },\r\n                { name: 'leaf123', key: '0-0-0-1' },\r\n              ],\r\n            },\r\n            {\r\n              name: 'parent 1-1',\r\n              key: '0-0-1',\r\n              children: [{ key: '0-0-1-0', name: 'leaf1235' }],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree4.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree4.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree4.vue?vue&type=template&id=396dc496&\"\nimport script from \"./tree4.vue?vue&type=script&lang=js&\"\nexport * from \"./tree4.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"300px\"}},[_c('h3',{staticClass:\"fun-title\"},[_vm._v(\"不带图标右键操作\")]),_c('com-show',[_c('y-custom-tree',{attrs:{\"default-expanded-keys\":['0-0', '0-0-0'],\"treeData\":_vm.treeData,\"operates\":_vm.commonOperates,\"operateTriggerMethod\":['contextmenu'],\"noIconOperate\":true}},[_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"smile\",\"type\":\"smile\"},slot:\"smile\"}),_c('a-icon',{staticStyle:{\"width\":\"16px\",\"height\":\"16px\"},attrs:{\"slot\":\"user\",\"type\":\"user\"},slot:\"user\"})],1)],1)],1),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"      \"),_c('code',{staticClass:\"language-html\",domProps:{\"textContent\":_vm._s(_vm.html)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n      \"),_c('code',{staticClass:\"language-JavaScript\",domProps:{\"textContent\":_vm._s(_vm.js)}},[_vm._v(\"\\n      \")]),_vm._v(\"\\n  \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div style=\"width:300px\">\r\n      <h3 class=\"fun-title\">不带图标右键操作</h3>\r\n      <com-show>\r\n        <y-custom-tree\r\n          :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n          :treeData=\"treeData\"\r\n          :operates=\"commonOperates\"\r\n          :operateTriggerMethod=\"['contextmenu']\"\r\n          :noIconOperate=\"true\"\r\n        >\r\n          <a-icon slot=\"smile\" type=\"smile\" style=\"width:16px;height:16px\" />\r\n          <a-icon slot=\"user\" type=\"user\" style=\"width:16px;height:16px\" />\r\n        </y-custom-tree>\r\n      </com-show>\r\n    </div>\r\n    <pre class=\"line-numbers\">\r\n        <code class=\"language-html\" v-text=\"html\">\r\n        </code>\r\n        <code class=\"language-JavaScript\" v-text=\"js\">\r\n        </code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'myTree2',\r\n  data() {\r\n    return {\r\n      aa: ['0-0-0'],\r\n      html: `\r\n          <y-custom-tree\r\n              :default-expanded-keys=\"['0-0', '0-0-0']\"\r\n              :treeData=\"treeData\"\r\n              :operates=\"commonOperates\"\r\n              :operateTriggerMethod=\"['contextmenu']\"\r\n              :noIconOperate=\"true\"\r\n            >\r\n              <a-icon slot=\"smile\" type=\"smile\" style=\"width:16px;height:16px\" />\r\n              <a-icon slot=\"user\" type=\"user\" style=\"width:16px;height:16px\" />\r\n            </y-custom-tree>\r\n          `,\r\n      js: `\r\n          data() {\r\n        return {\r\n          commonOperates: [\r\n            {\r\n              title: '全局方法1',\r\n              click: i => {\r\n                this.handleCreat(i);\r\n              },\r\n            },\r\n            {\r\n              title: '全局方法2',\r\n              click: i => {\r\n                this.handleDelete(i);\r\n              },\r\n            },\r\n          ],\r\n          treeData: [\r\n            {\r\n              title: '默认组织1111666888888888888',\r\n              key: '0-0',\r\n              isLeaf: false,\r\n              slots: { icon: 'smile' },\r\n              scopedSlots: { title: 'dropdown' },\r\n              operates: [\r\n                {\r\n                  title: '创建数据',\r\n                  line: true,\r\n                  children: [\r\n                    {\r\n                      title: '子创建1',\r\n                      click: i => {\r\n                        this.handleCreat(i);\r\n                      },\r\n                      disabled: true,\r\n                    },\r\n                    {\r\n                      title: '子创建2',\r\n                      click: i => {\r\n                        this.handleCreat(i);\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  title: '创建数据2',\r\n                  disabled: true,\r\n                  click: i => {\r\n                    this.handleDelete(i);\r\n                  },\r\n                },\r\n              ],\r\n              children: [\r\n                {\r\n                  title: '研发中心大树底1111111111111111111111111111111',\r\n                  key: '0-0-0',\r\n                  isLeaf: true,\r\n                  slots: { icon: 'user' },\r\n                  scopedSlots: { title: 'dropdown' },\r\n                  operates: [\r\n                    {\r\n                      title: '创建子节点2',\r\n                      click: i => {\r\n                        this.handleCreat(i);\r\n                      },\r\n                    },\r\n                    {\r\n                      title: '删除子节点2',\r\n                      click: i => {\r\n                        this.handleDelete(i);\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n                { title: '测试部', key: '0-0-1', isLeaf: false, slots: { icon: 'user' }, scopedSlots: { title: 'dropdown' } },\r\n              ],\r\n            },\r\n          ]\r\n          },\r\n          methods: {\r\n        handleCreat(item) {\r\n          console.log(item);\r\n        },\r\n      },`,\r\n      commonOperates: [\r\n        {\r\n          title: '全局方法1',\r\n          click: i => {\r\n            this.handleCreat(i);\r\n          },\r\n        },\r\n        {\r\n          title: '全局方法2',\r\n          click: i => {\r\n            this.handleDelete(i);\r\n          },\r\n        },\r\n      ],\r\n      treeData: [\r\n        {\r\n          title: '默认组织111166688888888888888888888888',\r\n          key: '0-0',\r\n          isLeaf: false,\r\n          slots: { icon: 'smile' },\r\n          scopedSlots: { title: 'dropdown' },\r\n          operates: [\r\n            {\r\n              title: '创建数据',\r\n              line: true,\r\n              children: [\r\n                {\r\n                  title: '子创建1',\r\n                  click: i => {\r\n                    this.handleCreat(i);\r\n                  },\r\n                  disabled: true,\r\n                },\r\n                {\r\n                  title: '子创建2',\r\n                  click: i => {\r\n                    this.handleCreat(i);\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              title: '创建数据2',\r\n              disabled: true,\r\n              click: i => {\r\n                this.handleDelete(i);\r\n              },\r\n            },\r\n          ],\r\n          children: [\r\n            {\r\n              title: '研发中心大树底1111111111111111111111111111111',\r\n              key: '0-0-0',\r\n              isLeaf: true,\r\n              slots: { icon: 'user' },\r\n              scopedSlots: { title: 'dropdown' },\r\n              operates: [\r\n                {\r\n                  title: '创建子节点2',\r\n                  click: i => {\r\n                    this.handleCreat(i);\r\n                  },\r\n                },\r\n                {\r\n                  title: '删除子节点2',\r\n                  click: i => {\r\n                    this.handleDelete(i);\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            { title: '测试部', key: '0-0-1', isLeaf: false, slots: { icon: 'user' }, scopedSlots: { title: 'dropdown' } },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleCreat(item) {\r\n      console.log(item);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree5.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree5.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree5.vue?vue&type=template&id=86c68dc4&\"\nimport script from \"./tree5.vue?vue&type=script&lang=js&\"\nexport * from \"./tree5.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <!-- 组件标题和说明 -->\r\n    <title-detail title=\"带图标Tree 树形控件\" detail=\"体现父子层级关系的信息组织方式。\" />\r\n    <h3 class=\"fun-title\">代码演示</h3>\r\n    <declareList title=\"通用原则\" :value=\"declareList\" />\r\n    <y-tabs default-active-key=\"1\">\r\n      <y-tab-pane key=\"1\" tab=\"基本用法\">\r\n        <tree1 />\r\n      </y-tab-pane>\r\n      <y-tab-pane key=\"2\" tab=\"带图标、提示框、操作栏、异步加载用法\">\r\n        <tree2 />\r\n      </y-tab-pane>\r\n      <y-tab-pane key=\"3\" tab=\"树节点拖拽用法\">\r\n        <tree3 />\r\n      </y-tab-pane>\r\n      <y-tab-pane key=\"4\" tab=\"严格关系\">\r\n        <tree4 />\r\n      </y-tab-pane>\r\n      <y-tab-pane key=\"5\" tab=\"不带图标右键操作\">\r\n        <tree5 />\r\n      </y-tab-pane>\r\n    </y-tabs>\r\n\r\n    <api-table :data=\"tableData\"></api-table>\r\n    <api-table title=\"事件\" :data=\"tableData2\"></api-table>\r\n    <api-table\r\n      title=\"TreeNode props\"\r\n      detail=\"结点描述数据对象，是 treeNodes 中的一项，TreeNode 使用相同的 API。\"\r\n      :data=\"tableData3\"\r\n    ></api-table>\r\n    <api-table title=\"DirectoryTree props\" :data=\"tableData4\"></api-table>\r\n    <api-table title=\"treeData相关参数说明\" :data=\"tableData5\"></api-table>\r\n  </div>\r\n</template>\r\n<script>\r\nimport tree1 from './tree1.vue';\r\nimport tree2 from './tree2.vue';\r\nimport tree3 from './tree3.vue';\r\nimport tree4 from './tree4.vue';\r\nimport tree5 from './tree5.vue';\r\nexport default {\r\n  name: 'MyCustomTree',\r\n  components: { tree1, tree2, tree3, tree4, tree5 },\r\n  data() {\r\n    return {\r\n      declareList: [\r\n        '任何需要通过层级组织的信息场景，如文件夹、组织架构、生物分类、国家地区等等。',\r\n        'Tree 子项中的可操作元素只能通过鼠标操作，不可聚焦，它们应该是表示性的，键盘不能操作到',\r\n        '默认节点高度为40px，如需要修改对应的高度可自行通过css穿透进行修改',\r\n      ],\r\n      tableData: [\r\n        {\r\n          params: 'noIconOperate',\r\n          explain: '当设置右键操作时,设置为false则有有操作图标，为true则没有操作图标可直接右键触发',\r\n          type: 'Boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'showTooltip',\r\n          explain: '鼠标经过是否启用tooptip提示默认为true,设置为false则不生效',\r\n          type: 'Boolean',\r\n          default: 'true',\r\n        },\r\n        {\r\n          params: 'operatePlacement',\r\n          explain: '菜单弹出位置：bottomLeft bottomCenter bottomRight topLeft topCenter topRight',\r\n          type: 'String',\r\n          default: 'bottomLeft',\r\n        },\r\n        {\r\n          params: 'nodeHeightSize',\r\n          explain: '控制树的子节点高度默认为小写m字符串，目前仅支持两种高度格式分别为，s代表40px,m代表32px',\r\n          type: 'String',\r\n          default: \"'m'\",\r\n        },\r\n        {\r\n          params: 'operates',\r\n          explain: `传入弹出框的事件如新增删除等，在treeData节点传入该属性则会覆盖该属性，treeData节点没有传入则采用全局的，全局和treeData节点都不传入operates属性则隐藏弹出入口,可在回调函数里编写自己的逻辑,i参数为选中树节点的所有属性,`,\r\n          type: 'Array',\r\n          default: `{\r\n              title: '创建',\r\n              click: (i) => {\r\n                this.handleCreat(i);\r\n              },\r\n            },`,\r\n        },\r\n        {\r\n          params: 'operateTriggerMethod',\r\n          explain: '触发下拉的行为, 移动端不支持 hover,不传默认为点击触发',\r\n          type: 'Array<click|hover|contextmenu>',\r\n          default: \"['click']\",\r\n        },\r\n        {\r\n          params: 'blockNode',\r\n          explain: '是否节点占据一行',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'treeData',\r\n          explain: 'treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（key 在整个树范围内唯一）',\r\n          type: 'array&lt;{key, title, children, [disabled, selectable]}&gt;',\r\n          default: '--',\r\n        },\r\n        {\r\n          params: 'replaceFields',\r\n          explain: '替换 treeNode 中 title,key,children 字段为 treeData 中对应的字段',\r\n          type: 'object',\r\n          default: \"{children:'children', title:'title', key:'key' }\",\r\n        },\r\n        {\r\n          params: 'autoExpandParent',\r\n          explain: '是否自动展开父节点',\r\n          type: 'boolean',\r\n          default: 'true',\r\n        },\r\n        {\r\n          params: 'checkable',\r\n          explain: '节点前添加 Checkbox 复选框',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'checkedKeys(v-model)',\r\n          explain:\r\n            '（受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点 key，则子节点自动选中；相应当子节点 key 都传入，父节点也自动选中。当设置<code>checkable</code>和<code>checkStrictly</code>，它是一个有<code>checked</code>和<code>halfChecked</code>属性的对象，并且父子节点的选中与否不再关联',\r\n          type: 'string[] | number[] | {checked: string[] | number[], halfChecked: string[] | number[]}',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'checkStrictly',\r\n          explain: 'checkable 状态下节点选择完全受控（父子节点选中状态不再关联）',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'strictCheckParent',\r\n          explain: '选中节点会自动选中以上关系的节点，可配合 checkStrictly 一起使用',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'defaultCheckedKeys',\r\n          explain: '默认选中复选框的树节点',\r\n          type: 'string[] | number[]',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'defaultExpandAll',\r\n          explain: '默认展开所有树节点',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n\r\n        {\r\n          params: 'defaultExpandedKeys',\r\n          explain: '默认展开指定的树节点',\r\n          type: 'string[] | number[]',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'defaultExpandParent',\r\n          explain: '默认展开父节点',\r\n          type: 'bool',\r\n          default: 'true',\r\n        },\r\n        {\r\n          params: 'defaultSelectedKeys',\r\n          explain: '默认选中的树节点',\r\n          type: 'string[] | number[]',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'disabled',\r\n          explain: '将树禁用',\r\n          type: 'bool',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'draggable',\r\n          explain: '设置节点可拖拽',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'expandedKeys(.sync)',\r\n          explain: '（受控）展开指定的树节点',\r\n          type: 'string[] | number[]',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'filterTreeNode',\r\n          explain: '按需筛选树节点（高亮），返回 true',\r\n          type: 'function(node)',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'loadData',\r\n          explain: '异步加载数据',\r\n          type: 'function(node)',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'loadedKeys',\r\n          explain: '（受控）已经加载的节点，需要配合 <code>loadData</code> 使用',\r\n          type: 'string[] | number[]',\r\n          default: '[]',\r\n        },\r\n        {\r\n          params: 'multiple',\r\n          explain: '支持点选多个节点（节点本身）',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'selectable',\r\n          explain: '是否可选中',\r\n          type: 'boolean',\r\n          default: 'true',\r\n        },\r\n        {\r\n          params: 'selectedKeys(.sync)',\r\n          explain: '（受控）设置选中的树节点',\r\n          type: 'string[] | number[]',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'showIcon',\r\n          explain: '是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'switcherIcon',\r\n          explain: '自定义树节点的展开/折叠图标',\r\n          type: 'slot',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'showLine',\r\n          explain: '是否展示连接线',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'title',\r\n          explain: '标题',\r\n          type: 'slot',\r\n          default: '',\r\n        },\r\n      ],\r\n      tableData2: [\r\n        {\r\n          params: 'check',\r\n          explain: '点击复选框触发',\r\n          type: 'function(checkedKeys, e:{checked: bool, checkedNodes, node, event})',\r\n        },\r\n        {\r\n          params: 'dragend',\r\n          explain: 'dragend 触发时调用',\r\n          type: 'function({event, node})',\r\n        },\r\n        {\r\n          params: 'dragenter',\r\n          explain: 'dragenter 触发时调用',\r\n          type: 'function({event, node, expandedKeys})',\r\n        },\r\n        {\r\n          params: 'dragleave',\r\n          explain: 'dragleave 触发时调用',\r\n          type: 'function({event, node})',\r\n        },\r\n        {\r\n          params: 'dragover',\r\n          explain: 'dragover 触发时调用',\r\n          type: 'function({event, node})',\r\n        },\r\n        {\r\n          params: 'dragstart',\r\n          explain: '开始拖拽时调用',\r\n          type: 'function({event, node})',\r\n        },\r\n        {\r\n          params: 'drop',\r\n          explain: 'drop 触发时调用',\r\n          type: 'function({event, node, dragNode, dragNodesKeys})',\r\n        },\r\n        {\r\n          params: 'expand',\r\n          explain: '展开/收起节点时触发',\r\n          type: 'function(expandedKeys, {expanded: bool, node})',\r\n        },\r\n        {\r\n          params: 'load',\r\n          explain: '节点加载完毕时触发',\r\n          type: 'function(loadedKeys, {event, node})',\r\n        },\r\n        {\r\n          params: 'rightClick',\r\n          explain: '响应右键点击',\r\n          type: 'function({event, node})',\r\n        },\r\n        {\r\n          params: 'select',\r\n          explain: '点击树节点触发',\r\n          type: 'function(selectedKeys, e:{selected: bool, selectedNodes, node, event})',\r\n        },\r\n      ],\r\n      tableData3: [\r\n        {\r\n          params: 'class',\r\n          explain: '节点的 class',\r\n          type: 'string',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'operateHidden',\r\n          explain: '是否隐藏操作',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'style',\r\n          explain: '节点的 style',\r\n          type: 'string|object',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'checkable',\r\n          explain: '当树为 checkable 时，设置独立节点是否展示 Checkbox',\r\n          type: 'boolean',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'disableCheckbox',\r\n          explain: '禁掉 checkbox',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'disabled',\r\n          explain: '禁掉响应',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'icon',\r\n          explain: '自定义图标。可接收组件，props 为当前节点 props',\r\n          type: 'slot|slot-scope',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'isLeaf',\r\n          explain: '设置为叶子节点(设置了<code>loadData</code>时有效)',\r\n          type: 'boolean',\r\n          default: 'false',\r\n        },\r\n        {\r\n          params: 'key',\r\n          explain:\r\n            '被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！',\r\n          type: 'string | number',\r\n          default: '内部计算出的节点位置',\r\n        },\r\n        {\r\n          params: 'selectable',\r\n          explain: '设置节点是否可被选中',\r\n          type: 'boolean',\r\n          default: 'true',\r\n        },\r\n        {\r\n          params: 'title',\r\n          explain: '标题',\r\n          type: 'string|slot|slot-scope',\r\n          default: \"'---'\",\r\n        },\r\n        {\r\n          params: 'slots',\r\n          explain: \"使用 treeNodes 时，可以通过该属性配置支持 slot 的属性，如 <code>slots: { title: 'XXX'}</code>\",\r\n          type: 'object',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'scopedSlots',\r\n          explain: \"使用 columns 时，可以通过该属性配置支持 slot-scope 的属性，如 <code>scopedSlots: { title: 'XXX'}</code>\",\r\n          type: 'object',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'on',\r\n          explain: '事件对象，仅在 treeNodes 使用方式中生效，如<code>{click: () =&gt; {}}</code>',\r\n          type: 'object',\r\n          default: \"'---'\",\r\n        },\r\n      ],\r\n      tableData4: [\r\n        {\r\n          params: 'expandAction',\r\n          explain: \"目录展开逻辑，可选 false 'click' 'dblclick'\t\",\r\n          type: 'string',\r\n          default: \"'click\",\r\n        },\r\n      ],\r\n      tableData5: [\r\n        {\r\n          params: 'slots',\r\n          explain: '可以通过slots自定义图标，每个节点的slot属性名字对应的插槽名字一致则渲染对应的内容',\r\n          type: '-',\r\n          default: '-',\r\n        },\r\n        {\r\n          params: 'scopedSlots',\r\n          explain: `可以通过slots自定义图标，每个节点的slot属性名字对应的插槽名字一致则渲染对应的内容scopedSlots和slots区别可以通过scopedSlots可以传递参数`,\r\n          type: '-',\r\n          default: '-',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    //点击删除创建可以获取对应的节点信息\r\n    handleDelete(i) {\r\n      console.log('点击了删除', i);\r\n    },\r\n    handleCreat(i) {\r\n      console.log('点击了创建', i);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2750543a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}